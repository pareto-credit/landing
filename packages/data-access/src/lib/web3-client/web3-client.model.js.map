{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/web3-client/web3-client.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport { ContractEventOptions, PayableMethodObject } from 'web3-eth-contract'\n\nimport { sAbiContract, sBCAddress, sBigInt, sStringId } from '../core'\nimport Web3, {\n  Block,\n  Contract,\n  ContractAbi,\n  EventLog,\n  Filter,\n  Transaction,\n  TransactionReceipt,\n} from 'web3'\nimport { Abi, AbiContract, BlockNumber, iBigInt } from '../core'\nimport { VaultContractType } from '../vaults'\n\nexport interface Web3ClientOptions {\n  web3: Web3\n  provider: Web3RPCProvider\n  contractAddress?: string\n  blocksPerYear?: number\n  logger?: any\n}\n\nexport interface ERC20Token {\n  decimals: number\n  symbol: string\n  name: string\n  address: string\n}\n\nexport function sERC20Token() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('decimals', S.number())\n    .required()\n    .prop('symbol', S.string())\n    .required()\n    .prop('name', S.string())\n    .required()\n    .prop('address', sBCAddress())\n    .required()\n}\n\nexport type Web3Clients = {\n  [chainId: string]: Web3ClientModel\n}\n\nexport interface Web3ClientModel {\n  web3: Web3\n  provider: Web3RPCProvider\n  blocksPerYear: number\n  initContract: (abi: ContractAbi, address: string) => Contract<Abi>\n  parseBlock: (blockNumber: BlockNumber) => string\n  createTopic: (topic: Web3Topic) => string\n  getTransaction: (hash: string) => Promise<Transaction | undefined>\n  getTransactionLogs: (hash: string) => Promise<TransactionReceipt['logs']>\n  getERC20: (address: string) => Promise<ERC20Token | undefined>\n  getContractEvents: (\n    contract: Contract<Abi>,\n    eventType: 'Transfer',\n    startBlock: BlockNumber,\n    endBlock?: BlockNumber,\n    filters?: Filter,\n    maxBlocks?: number\n  ) => Promise<Web3Event[]>\n  call: (\n    callData: Web3CallData[],\n    blockNumber?: BlockNumber\n  ) => Promise<Web3CallData[]>\n  getBlock: (blockNumber?: string | number | bigint) => Promise<Block>\n}\n\nexport type Web3Protocol =\n  | 'Idle'\n  | 'Clearpool'\n  | 'AaveV2'\n  | 'Gearbox'\n  | 'Compound'\n  | 'Lido'\n  | 'InstadApp'\n  | 'UniswapV2'\n  | 'UniswapV3'\n  | 'Morpho'\n  | 'Ethena'\n  | 'Curve'\n  | 'Sky'\n\nexport function sWeb3Protocol() {\n  return S.string().enum([\n    'Idle',\n    'Clearpool',\n    'AaveV2',\n    'Morpho',\n    'Gearbox',\n    'Compound',\n    'Lido',\n    'InstadApp',\n    'Ethena',\n    'UniswapV2',\n    'UniswapV3',\n    'Curve',\n    'Sky',\n  ])\n}\n\nexport type Web3ContractType =\n  | VaultContractType\n  | 'ERC20'\n  | 'POOL'\n  | 'TOKEN'\n  | 'ORACLE'\n  | 'TRANCHE'\n  | 'STRATEGY'\n  | 'WALLET'\n  | 'CDO_EPOCH_STRATEGY'\n  | 'WALLET_DEPOSIT_QUEUE'\n  | 'WALLET_WITHDRAW_QUEUE'\n  | 'CDO_EPOCH_DEPOSIT_QUEUE'\n  | 'CDO_EPOCH_WITHDRAW_QUEUE'\n  | 'WALLET_CDO_EPOCH_STRATEGY'\n  | 'PARETO_DOLLAR_QUEUE'\n  | 'PARETO_DOLLAR_QUEUE_EPOCH_PENDING'\n  | 'PARETO_DOLLAR_STAKING'\n  | 'WALLET_PARETO_DOLLAR_STAKING'\n  | 'PARETO_DOLLAR_QUEUE_YIELD_SOURCE'\n\nexport interface Web3Provider {\n  web3: Web3\n  provider: Web3RPCProvider\n}\n\nexport interface Web3ProviderConnection {\n  provider: Web3RPCProvider\n  https?: string\n  wss?: string\n}\n\nexport function sWeb3ProviderConnection() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('provider', sWeb3RPCProvider())\n    .description('The RPC provider.')\n    .required()\n    .prop('https', S.string())\n    .description('The RPC official https URL.')\n    .prop('wss', S.string())\n    .description('The RPC official wss URL.')\n}\n\nexport type Web3RPCProvider = 'INFURA' | 'ALCHEMY'\n\nexport function sWeb3RPCProvider() {\n  return S.string().enum(['INFURA', 'ALCHEMY'])\n}\n\nexport type Web3Event = EventLog\n\nexport interface Web3EventsOptions {\n  event: string\n  type: Web3EventType\n  contract: Contract<Abi>\n  options: ContractEventOptions\n}\n\nexport type Web3EventType =\n  | 'MINT'\n  | 'REDEEM'\n  | 'TRANSFER'\n  | 'START_EPOCH'\n  | 'STOP_EPOCH'\n  | 'GET_INSTANT_WITHDRAWS'\n  | 'CLAIM_WITHDRAW'\n  | 'CLAIM_INSTANT_WITHDRAW'\n  | 'REQUEST_DEPOSIT'\n  | 'DELETE_DEPOSIT_REQUEST'\n  | 'PROCESS_DEPOSIT_QUEUE'\n  | 'CLAIM_DEPOSIT_REQUEST'\n  | 'REQUEST_WITHDRAW'\n  | 'DELETE_WITHDRAW_REQUEST'\n  | 'PROCESS_WITHDRAW_QUEUE'\n  | 'CLAIM_WITHDRAW_REQUEST'\n  | 'PROCESS_WITHDRAW_CLAIMS'\n  | 'DISTRIBUTED_REWARDS'\n  | 'ADD_COLLATERAL'\n  | 'REMOVE_COLLATERAL'\n  | 'REQUEST_REDEEM'\n  | 'CLAIM_REDEEM_REQUEST'\n  | 'NEW_EPOCH'\n  | 'ADD_YIELD_SOURCE'\n  | 'REMOVE_YIELD_SOURCE'\n  | 'REDEEM_YIELD_SOURCE'\n  | 'DEPOSIT_YIELD_SOURCE'\n  | 'STAKE'\n  | 'UNSTAKE'\n  | 'DEPOSIT_REWARDS'\n  | 'STAKE_POOL'\n  | 'UNSTAKE_POOL'\n\nexport interface Web3Tokens {\n  INFURA?: string\n  ALCHEMY?: string\n}\n\nexport interface Web3WalletTokens {\n  walletConnect?: string\n  onBoardKey?: string\n}\n\nexport type Web3Subscription =\n  | 'logs'\n  | 'newBlockHeaders'\n  | 'newHeads'\n  | 'newPendingTransactions'\n  | 'pendingTransactions'\n  | 'syncing'\n\nexport interface Web3SubscriptionOptions {\n  filter?: any\n  fromBlock?: number\n  topics?: Web3Topic[]\n}\n\nexport interface Web3PayableOptionsParams {\n  method: PayableMethodObject\n  from: string\n  toleranceBearing?: number\n}\n\nexport type Web3Topic = 'transfer'\n\nexport interface Web3Entity {\n  protocol: Web3Protocol\n  type: Web3ContractType\n  address: string\n}\n\nexport interface Web3CallData extends Web3Entity {\n  block: 'current' | 'previous'\n  method: string\n  parent?: Web3Entity\n  params?: Web3ContractMethodParam[]\n  inputs: Web3DataParam[]\n  outputs: Web3DataParam[]\n}\n\nexport interface Web3DataParam {\n  name?: string\n  type: string\n  value?: any\n  components?: any\n}\n\nexport type Web3DataParamType =\n  | string\n  | {\n      type: string\n      components: any\n    }\n\nexport interface Web3DataParams {\n  names: Array<string | undefined>\n  types: Array<Web3DataParamType>\n  values: Array<any>\n}\n\nexport interface Web3CallParam {\n  address: string\n  allowFailure: 0 | 1\n  bytes: string\n}\n\nexport interface Web3TransactionFee {\n  ETH: string\n  USD?: string\n}\n\nexport interface Web3Contract {\n  web3Client: Web3ClientModel\n  contract: Contract<Abi>\n  address: string\n}\n\nexport interface Web3ContractMethod {\n  protocol: Web3Protocol\n  type: Web3ContractType\n  block: 'current' | 'previous'\n  method: string\n  params?: Web3ContractMethodParam[]\n  tokenSymbol?: string\n}\n\nexport interface Web3ProtocolContract extends Web3BaseContract {\n  fromBlock?: iBigInt\n  protocol: Web3Protocol\n  operatorId?: string\n}\n\nexport interface Web3BaseContract {\n  address: string\n  abi: AbiContract\n}\n\nexport type Web3ContractMethodParam =\n  | '1e18'\n  | 'vaultAddress'\n  | 'tokenAddress'\n  | 'walletAddress'\n  | 'spenderAddress'\n  | 'tokenAmount'\n  | 'tokenFee'\n  | 'epochNumber'\n  | 'prevEpochNumber'\n  | 'tokenPriceLimit'\n  | 'yieldSourceAddress'\n  | 'tokenAddress[ARB]'\n  | 'tokenAddress[USDC]'\n  | 'tokenAddress[WETH]'\n  | 'tokenAddress[stETH]'\n  | 'tokenAddress[USDe]'\n  | 'tokenAddress[MATIC]'\n  | 'tokenAddress[OP]'\n  | 'tokenAddresses[USDC|OP]'\n  | 'tokenAddresses[USDC|WETH]'\n  | 'tokenAddresses[USDC|MATIC]'\n  | 'tokenAddresses[USDC|WETH|stETH]'\n\nexport function sWeb3ProtocolContract() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('protocol', sWeb3Protocol())\n    .prop('fromBlock', sBigInt())\n    .prop('operatorId', sStringId())\n    .extend(sWeb3BaseContract())\n}\n\nexport function sWeb3BaseContract() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('address', sBCAddress())\n    .required()\n    .prop('abi', sAbiContract())\n    .required()\n}\n"],"names":["S","sAbiContract","sBCAddress","sBigInt","sStringId","sERC20Token","object","additionalProperties","prop","number","required","string","sWeb3Protocol","enum","sWeb3ProviderConnection","sWeb3RPCProvider","description","sWeb3ProtocolContract","extend","sWeb3BaseContract"],"mappings":"AAAA,OAAOA,OAAO,qBAAoB;AAGlC,SAASC,YAAY,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAQ,UAAS;AA4BtE,OAAO,SAASC;IACd,OAAOL,EAAEM,MAAM,GACZC,oBAAoB,CAAC,OACrBC,IAAI,CAAC,YAAYR,EAAES,MAAM,IACzBC,QAAQ,GACRF,IAAI,CAAC,UAAUR,EAAEW,MAAM,IACvBD,QAAQ,GACRF,IAAI,CAAC,QAAQR,EAAEW,MAAM,IACrBD,QAAQ,GACRF,IAAI,CAAC,WAAWN,cAChBQ,QAAQ;AACb;AA8CA,OAAO,SAASE;IACd,OAAOZ,EAAEW,MAAM,GAAGE,IAAI,CAAC;QACrB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;AACH;AAkCA,OAAO,SAASC;IACd,OAAOd,EAAEM,MAAM,GACZC,oBAAoB,CAAC,OACrBC,IAAI,CAAC,YAAYO,oBACjBC,WAAW,CAAC,qBACZN,QAAQ,GACRF,IAAI,CAAC,SAASR,EAAEW,MAAM,IACtBK,WAAW,CAAC,+BACZR,IAAI,CAAC,OAAOR,EAAEW,MAAM,IACpBK,WAAW,CAAC;AACjB;AAIA,OAAO,SAASD;IACd,OAAOf,EAAEW,MAAM,GAAGE,IAAI,CAAC;QAAC;QAAU;KAAU;AAC9C;AA6KA,OAAO,SAASI;IACd,OAAOjB,EAAEM,MAAM,GACZC,oBAAoB,CAAC,OACrBC,IAAI,CAAC,YAAYI,iBACjBJ,IAAI,CAAC,aAAaL,WAClBK,IAAI,CAAC,cAAcJ,aACnBc,MAAM,CAACC;AACZ;AAEA,OAAO,SAASA;IACd,OAAOnB,EAAEM,MAAM,GACZC,oBAAoB,CAAC,OACrBC,IAAI,CAAC,WAAWN,cAChBQ,QAAQ,GACRF,IAAI,CAAC,OAAOP,gBACZS,QAAQ;AACb"}