{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/wallet-performances/wallet-performance.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport {\n  Page,\n  sBCAddress,\n  sBigInt,\n  sBlock,\n  sClientEntity,\n  sPageSearchQuery,\n  sPercentage,\n  sReward,\n  sStringId,\n} from '../core'\nimport { Block, ClientEntity, PageSearchQuery, Reward, iBigInt } from '../core'\nimport { WALLET_PERFORMANCES_ROUTES_KEY } from './wallet-performance.const'\nimport {\n  sWalletBlockDistributedRewards,\n  WalletBlockDistributedRewards,\n} from '../wallet-blocks'\n\n/**\n * Client WalletPerformance interface\n */\nexport interface WalletPerformance\n  extends WalletPerformanceData,\n    ClientEntity {}\n\nexport function sWalletPerformance(isPartial?: boolean) {\n  return S.object()\n    .id('#walletPerformance')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sWalletPerformanceData(isPartial))\n}\n\nexport interface WalletPerformanceData extends WalletBlockPerformance {\n  walletId: string\n  walletAddress: string\n  vaultId: string\n  vaultAddress: string\n  block: Block\n  deposits: WalletBlockAmounts\n  redeemable: WalletBlockAmounts\n}\n\nexport function sWalletPerformanceData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('walletId', sStringId())\n    .prop('walletAddress', sBCAddress())\n    .prop('vaultId', sStringId())\n    .prop('vaultAddress', sBCAddress())\n    .prop('block', sBlock())\n    .prop('deposits', sWalletBlockAmounts())\n    .description(\"The wallet's deposits.\")\n    .prop('redeemable', sWalletBlockAmounts())\n    .description(\"The wallet's redeemable amounts.\")\n    .required(\n      isPartial\n        ? []\n        : ['walletId', 'walletAddress', 'vaultId', 'vaultAddress', 'block']\n    )\n    .extend(sWalletBlockPerformance(isPartial))\n}\n\nexport interface WalletPortfolio extends WalletBlockPerformance {\n  vaultIds: string[]\n  operators: WalletPositionOperator[]\n  chains: WalletPositionChain[]\n  tokens: WalletPositionToken[]\n  deposits: WalletBlockAmounts\n  redeemable: WalletBlockAmounts\n  pendingDeposits: WalletBlockAmounts\n  pendingWithdraws: WalletBlockAmounts\n}\n\nexport function sWalletPositionAggregated() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultIds', S.array().items(sStringId()))\n    .required()\n    .prop('operators', S.array().items(sWalletPositionOperator()))\n    .required()\n    .prop('chains', S.array().items(sWalletPositionChain()))\n    .required()\n    .prop('tokens', S.array().items(sWalletPositionToken()))\n    .required()\n    .prop('deposits', sWalletBlockAmounts())\n    .description(\"The user's deposits.\")\n    .required()\n    .prop('redeemable', sWalletBlockAmounts())\n    .description(\"The user's redeemable amounts.\")\n    .required()\n    .prop('pendingDeposits', sWalletBlockAmounts())\n    .description(\"The user's pending deposits.\")\n    .required()\n    .prop('pendingWithdraws', sWalletBlockAmounts())\n    .description(\"The user's pending withdraws.\")\n    .required()\n    .extend(sWalletBlockPerformance())\n}\n\nexport interface WalletPositionToken {\n  walletId: string\n  tokenId: string\n  tokenAddress: string\n  amount: iBigInt\n  USD: iBigInt\n  percentage: number\n  pool?: string\n  operatorId?: string\n}\n\nexport function sWalletPositionToken() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('walletId', sStringId())\n    .required()\n    .prop('tokenId', sStringId())\n    .required()\n    .prop('tokenAddress', sBCAddress())\n    .required()\n    .prop('amount', sBigInt())\n    .required()\n    .prop('USD', sBigInt())\n    .required()\n    .prop('percentage', S.number())\n    .required()\n    .prop('pool', S.string())\n    .prop('operatorId', sStringId())\n}\n\nexport interface WalletPositionChain {\n  chainId: string\n  USD: iBigInt\n  percentage: number\n}\n\nexport function sWalletPositionChain() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('chainId', sStringId())\n    .required()\n    .prop('USD', sBigInt())\n    .required()\n    .prop('percentage', S.number())\n    .required()\n}\n\nexport interface WalletPositionOperator {\n  operatorId: string\n  USD: iBigInt\n  percentage: number\n}\n\nexport function sWalletPositionOperator() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('operatorId', sStringId())\n    .required()\n    .prop('USD', sBigInt())\n    .required()\n    .prop('percentage', S.number())\n    .required()\n}\n\nexport interface WalletDistributedRewards\n  extends WalletBlockDistributedRewards {\n  walletId: string\n  block: Block\n  APR: number\n  percentage: number\n}\n\nexport function sWalletDistributedRewards() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('block', sBlock())\n    .required()\n    .prop('APR', S.number())\n    .required()\n    .prop('percentage', S.number())\n    .required()\n    .extend(sWalletBlockDistributedRewards())\n}\n\nexport interface WalletDeposits {\n  walletId: string\n  avgPrice: iBigInt\n  firstBlock?: Block\n  deposits: WalletBlockAmounts\n  redeemable: WalletBlockAmounts\n  pendingDeposits: WalletBlockAmounts\n  pendingWithdraws: WalletBlockAmounts\n}\n\nexport function sWalletDeposits() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('firstBlock', sBlock())\n    .prop('walletId', sStringId())\n    .required()\n    .prop('avgPrice', sBigInt())\n    .description(\"The user's avg buy price.\")\n    .required()\n    .prop('deposits', sWalletBlockAmounts())\n    .description(\"The user's deposits.\")\n    .required()\n    .prop('redeemable', sWalletBlockAmounts())\n    .description(\"The user's redeemable amounts.\")\n    .required()\n    .prop('pendingDeposits', sWalletBlockAmounts())\n    .description(\"The user's pending deposits.\")\n    .required()\n    .prop('pendingWithdraws', sWalletBlockAmounts())\n    .description(\"The user's pending withdraws.\")\n    .required()\n}\n\nexport interface WalletVaultBalance {\n  block: Block\n  balance: iBigInt\n  tokenBalance: iBigInt\n}\n\nexport function sWalletVaultBalance() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('block', sBlock())\n    .required()\n    .prop('balance', sBigInt())\n    .description('The balance of the wallet in the vault.')\n    .required()\n    .prop('tokenBalance', sBigInt())\n    .description('The current token balance of the wallet.')\n    .required()\n}\n\nexport interface WalletPosition extends WalletBlockPerformance, WalletDeposits {\n  block: Block\n  walletId: string\n  walletAddress: string\n  tokenId: string\n  vaultId: string\n  chainId: string\n  vaultPrice: string\n  vaultAddress: string\n  tokenAddress: string\n  balances?: WalletVaultBalance[]\n}\n\nexport function sWalletPosition() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('walletId', sStringId())\n    .required()\n    .prop('vaultId', sStringId())\n    .required()\n    .prop('chainId', sStringId())\n    .required()\n    .prop('tokenId', sStringId())\n    .required()\n    .prop('walletAddress', sBCAddress())\n    .required()\n    .prop('vaultAddress', sBCAddress())\n    .required()\n    .prop('tokenAddress', sBCAddress())\n    .required()\n    .prop('vaultPrice', sBigInt())\n    .description('The current vault price')\n    .required()\n    .prop('balances', S.array().items(sWalletVaultBalance()))\n    .description(\"The user's redeemable amounts.\")\n    .extend(sWalletBlockPerformance())\n    .extend(sWalletDeposits())\n}\n\nexport interface WalletBlockPerformance {\n  // The age of the wallet block performance in seconds\n  age: number\n  // Earnings\n  earnings: WalletBlockEarnings\n  // Fees\n  fees: WalletBlockAmounts\n  // APY realized\n  realizedAPY: number\n  // APY realized with rewards\n  rewardsRealizedAPY: number\n  // Percentage of the pool\n  poolSharePercentage: number\n  // Rewards accrued but not yet received\n  accruedRewards?: Reward[]\n  // Rewards actually received\n  collectedRewards?: Reward[]\n  // Additional tokens balances\n  tokens?: WalletPositionToken[]\n}\n\nexport function sWalletBlockPerformance(isPartial?: boolean) {\n  return (\n    S.object()\n      .additionalProperties(false)\n      .prop('age', S.number())\n      .prop('earnings', sWalletBlockEarnings())\n      .description(\"The user's earnings.\")\n      .prop('fees', sWalletBlockAmounts())\n      .description(\"The user's fees.\")\n      .prop('realizedAPY', S.number())\n      .description(\"The user's APY realized.\")\n      .prop('rewardsRealizedAPY', S.number())\n      .description(\"The user's APY realized with rewards.\")\n      .prop('poolSharePercentage', sPercentage())\n      .description('The pool share percentage of the user.')\n      .prop('accruedRewards', S.array().items(sReward()))\n      .description('The accrued rewards of the user.')\n      .prop('collectedRewards', S.array().items(sReward()))\n      .description('The collected rewards of the user.')\n      .prop('tokens', S.array().items(sWalletPositionToken()))\n\n      // Backward-compatible\n      .prop('balance', sBigInt())\n      .description('The balance of the wallet in the vault.')\n      .prop('tokenBalance', sBigInt())\n      .description('The current token balance of the wallet.')\n      .required(\n        isPartial\n          ? []\n          : ['age', 'earnings', 'realizedAPY', 'poolSharePercentage']\n      )\n  )\n}\n\nexport interface WalletBlockAmounts {\n  // USD amount\n  USD: iBigInt\n  // Underlying token amount\n  token?: iBigInt\n  // Idle token amount\n  vault?: iBigInt\n}\n\nexport function sWalletBlockAmounts() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('USD', sBigInt())\n    .description(\"The wallet's earnings in USD.\")\n    .required()\n    .prop('token', sBigInt())\n    .description(\"The wallet's earnings in underlying tokens.\")\n    .prop('vault', sBigInt())\n    .description(\"The wallet's earnings in vault tokens.\")\n}\n\nexport interface WalletBlockEarnings extends WalletBlockAmounts {\n  // The percentage of the earning from the starting price\n  percentage: number\n  // Rewards\n  rewards?: WalletBlockEarningsRewards\n}\n\nexport function sWalletBlockEarnings() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('percentage', S.number())\n    .description(\"The wallet's percentage earnings.\")\n    .required()\n    .prop('rewards', sWalletBlockEarningsRewards())\n    .description(\"The user's rewards earnings.\")\n    .extend(sWalletBlockAmounts())\n}\n\nexport interface WalletBlockEarningsRewards {\n  // USD amount\n  USD: iBigInt\n  // The percentage of the earning from the starting price\n  percentage: number\n}\n\nexport function sWalletBlockEarningsRewards() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('USD', sBigInt())\n    .description(\"The wallet's rewards USD earnings.\")\n    .required()\n    .prop('percentage', S.number())\n    .description(\"The wallet's rewards percentage earnings.\")\n    .required()\n}\n\nexport enum WalletPerformanceErrorCodes {\n  alreadyExists = 'WALLET_PERFORMANCE_ALREADY_EXISTS',\n  rewardProgramNotFound = 'WALLET_PERFORMANCE_REWARD_PROGRAM_NOT_FOUND',\n}\n\nexport type WalletPerformanceFields =\n  | '_id'\n  | 'walletId'\n  | 'vaultId'\n  | 'block'\n  | 'age'\n  | 'earnings'\n  | 'realizedAPY'\n  | 'poolSharePercentage'\n  | 'accruedRewards'\n  | 'collectedRewards'\n  | 'createdAt'\n  | 'createdBy'\n  | 'updatedAt'\n  | 'updatedBy'\n\nexport const WALLET_PERFORMANCE_FIELDS = [\n  '_id',\n  'walletId',\n  'vaultId',\n  'block',\n  'age',\n  'earnings',\n  'realizedAPY',\n  'poolSharePercentage',\n  'accruedRewards',\n  'collectedRewards',\n  'createdAt',\n  'createdBy',\n  'updatedAt',\n  'updatedBy',\n]\n\nexport const WALLET_PERFORMANCE_SORT_FIELDS = ['_id']\n\nexport interface WalletPerformancesSearchQuery\n  extends PageSearchQuery<'_id', WalletPerformanceFields> {\n  vaultId?: string | string[]\n  walletId?: string | string[]\n  walletAddress?: string | string[]\n}\n\nexport function sWalletPerformancesSearchQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('walletId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('Wallet IDs of the performance that must match.')\n    .prop('vaultId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('Vault IDs of the performance that must match.')\n    .prop('timestamp:gte', S.number())\n    .description('Start timestamp of the performance.')\n    .prop('timestamp:lte', S.number())\n    .description('End timestamp of the performance.')\n    .extend(\n      sPageSearchQuery(\n        WALLET_PERFORMANCE_FIELDS,\n        WALLET_PERFORMANCE_SORT_FIELDS\n      )\n    )\n}\n\nexport interface WalletPerformanceClientModel {\n  search: (\n    params?: WalletPerformancesSearchQuery\n  ) => Promise<Page<WalletPerformance>>\n  searchAll: (\n    params?: WalletPerformancesSearchQuery\n  ) => Promise<Page<WalletPerformance>>\n  list: (params?: WalletPerformancesSearchQuery) => Promise<WalletPerformance[]>\n  listAll: (\n    params?: WalletPerformancesSearchQuery\n  ) => Promise<WalletPerformance[]>\n}\n\nexport enum WalletPerformanceRoutes {\n  v1Search = `v1/${WALLET_PERFORMANCES_ROUTES_KEY}`,\n}\n"],"names":["S","sBCAddress","sBigInt","sBlock","sClientEntity","sPageSearchQuery","sPercentage","sReward","sStringId","WALLET_PERFORMANCES_ROUTES_KEY","sWalletBlockDistributedRewards","sWalletPerformance","isPartial","object","id","additionalProperties","extend","sWalletPerformanceData","prop","sWalletBlockAmounts","description","required","sWalletBlockPerformance","sWalletPositionAggregated","array","items","sWalletPositionOperator","sWalletPositionChain","sWalletPositionToken","number","string","sWalletDistributedRewards","sWalletDeposits","sWalletVaultBalance","sWalletPosition","sWalletBlockEarnings","sWalletBlockEarningsRewards","WalletPerformanceErrorCodes","WALLET_PERFORMANCE_FIELDS","WALLET_PERFORMANCE_SORT_FIELDS","sWalletPerformancesSearchQuery","minItems","maxItems","WalletPerformanceRoutes"],"mappings":"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"}