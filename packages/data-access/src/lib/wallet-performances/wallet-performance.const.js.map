{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/wallet-performances/wallet-performance.const.ts"],"sourcesContent":["import {\n  WalletBlockPerformance,\n  WalletPosition,\n  WalletPortfolio,\n} from './wallet-performance.model'\n\nexport const WALLET_PERFORMANCES_ROUTES_KEY = 'wallet-performances'\n\n/**\n * Wallet performance initial state\n */\nexport const WALLET_PERFORMANCE: WalletBlockPerformance = {\n  age: 0,\n  earnings: {\n    USD: '0',\n    token: '0',\n    percentage: 0,\n    rewards: {\n      USD: '0',\n      percentage: 0,\n    },\n  },\n  fees: {\n    USD: '0',\n    token: '0',\n  },\n  realizedAPY: 0,\n  rewardsRealizedAPY: 0,\n  poolSharePercentage: 0,\n  accruedRewards: [],\n  collectedRewards: [],\n}\n\n/**\n * Wallet position aggregated initial state\n */\nexport const WALLET_PORTFOLIO: WalletPortfolio = {\n  deposits: {\n    USD: '0',\n  },\n  redeemable: {\n    USD: '0',\n  },\n  pendingDeposits: {\n    USD: '0',\n  },\n  pendingWithdraws: {\n    USD: '0',\n  },\n  chains: [],\n  tokens: [],\n  vaultIds: [],\n  operators: [],\n  ...WALLET_PERFORMANCE,\n}\n\nexport const WALLET_POSITION: WalletPosition = {\n  block: {\n    number: 0,\n    timestamp: 0,\n  },\n  walletId: '',\n  walletAddress: '',\n  tokenId: '',\n  chainId: '',\n  vaultId: '',\n  vaultAddress: '',\n  tokenAddress: '',\n  avgPrice: '0',\n  vaultPrice: '0',\n  deposits: {\n    USD: '0',\n  },\n  redeemable: {\n    USD: '0',\n  },\n  pendingDeposits: {\n    USD: '0',\n  },\n  pendingWithdraws: {\n    USD: '0',\n  },\n  balances: [],\n  ...WALLET_PERFORMANCE,\n}\n"],"names":["WALLET_PERFORMANCES_ROUTES_KEY","WALLET_PERFORMANCE","age","earnings","USD","token","percentage","rewards","fees","realizedAPY","rewardsRealizedAPY","poolSharePercentage","accruedRewards","collectedRewards","WALLET_PORTFOLIO","deposits","redeemable","pendingDeposits","pendingWithdraws","chains","tokens","vaultIds","operators","WALLET_POSITION","block","number","timestamp","walletId","walletAddress","tokenId","chainId","vaultId","vaultAddress","tokenAddress","avgPrice","vaultPrice","balances"],"mappings":";AAMA,OAAO,MAAMA,iCAAiC,sBAAqB;AAEnE;;CAEC,GACD,OAAO,MAAMC,qBAA6C;IACxDC,KAAK;IACLC,UAAU;QACRC,KAAK;QACLC,OAAO;QACPC,YAAY;QACZC,SAAS;YACPH,KAAK;YACLE,YAAY;QACd;IACF;IACAE,MAAM;QACJJ,KAAK;QACLC,OAAO;IACT;IACAI,aAAa;IACbC,oBAAoB;IACpBC,qBAAqB;IACrBC,gBAAgB,EAAE;IAClBC,kBAAkB,EAAE;AACtB,EAAC;AAED;;CAEC,GACD,OAAO,MAAMC,mBAAoC;IAC/CC,UAAU;QACRX,KAAK;IACP;IACAY,YAAY;QACVZ,KAAK;IACP;IACAa,iBAAiB;QACfb,KAAK;IACP;IACAc,kBAAkB;QAChBd,KAAK;IACP;IACAe,QAAQ,EAAE;IACVC,QAAQ,EAAE;IACVC,UAAU,EAAE;IACZC,WAAW,EAAE;GACVrB,oBACJ;AAED,OAAO,MAAMsB,kBAAkC;IAC7CC,OAAO;QACLC,QAAQ;QACRC,WAAW;IACb;IACAC,UAAU;IACVC,eAAe;IACfC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,cAAc;IACdC,cAAc;IACdC,UAAU;IACVC,YAAY;IACZpB,UAAU;QACRX,KAAK;IACP;IACAY,YAAY;QACVZ,KAAK;IACP;IACAa,iBAAiB;QACfb,KAAK;IACP;IACAc,kBAAkB;QAChBd,KAAK;IACP;IACAgC,UAAU,EAAE;GACTnC,oBACJ"}