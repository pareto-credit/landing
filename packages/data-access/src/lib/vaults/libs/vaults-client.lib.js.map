{"version":3,"sources":["../../../../../../../../libs/shared/data-access/src/lib/vaults/libs/vaults-client.lib.ts"],"sourcesContent":["import { Axios } from 'axios'\nimport {\n  VaultMintRedeemBody,\n  VaultData,\n  VaultRoutes,\n  VaultTransferBody,\n  VaultPerformBody,\n  VaultsClient,\n  VaultsSearchQuery,\n  VaultSyncBody,\n  VaultBlockEventBody,\n  VaultTransferEpochBody,\n  VaultPositionQuery,\n  VaultDistributedRewardsBody,\n  VaultIntegrationsQuery,\n  VaultSyncBlockBody,\n  VaultsPerformancesQuery,\n  VaultTransferUSPBody,\n} from '../vault.model'\nimport { uriFy } from '../../core'\nimport { stringify } from '../../core/utility.lib'\n\n/**\n * Create vaults client\n * @param axios - The Axios instance\n * @returns the vaults GOT client\n */\nexport function createVaultsClient(axios: Axios): VaultsClient {\n  return {\n    // Create new Vault\n    create: (body: VaultData) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Create,\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    search: (searchParams?: VaultsSearchQuery) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Search,\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => response.data),\n    list: (searchParams?: VaultsSearchQuery) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Search,\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => {\n          const page = response.data\n          return page.data\n        }),\n    findOne: (searchParams: VaultsSearchQuery) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Search,\n          method: 'GET',\n          params: new URLSearchParams(uriFy(searchParams)),\n        })\n        .then((response) => {\n          const page = response.data\n          return page.data ? page.data[0] : undefined\n        }),\n    readOne: (searchParams: VaultsSearchQuery) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Search,\n          method: 'GET',\n          params: new URLSearchParams(uriFy(searchParams)),\n        })\n        .then((response) => {\n          const { data } = response.data\n\n          if (!data.length) {\n            throw Error('Not found')\n          }\n\n          return data[0]\n        }),\n    position: (vaultId: string, searchParams: VaultPositionQuery) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Position.replace(':vaultId', vaultId),\n          method: 'GET',\n          params: new URLSearchParams(uriFy(searchParams)),\n        })\n        .then((response) => response.data),\n    performances: (params: VaultsPerformancesQuery) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Performances,\n          method: 'GET',\n          params: new URLSearchParams(uriFy(params)),\n        })\n        .then((response) => response.data),\n    integrations: (vaultId: string, searchParams: VaultIntegrationsQuery) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Integrations.replace(':vaultId', vaultId),\n          method: 'GET',\n          params: new URLSearchParams(uriFy(searchParams)),\n        })\n        .then((response) => response.data),\n    mint: (vaultId: string, body: VaultMintRedeemBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Mint.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    redeem: (vaultId, body: VaultMintRedeemBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Redeem.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    transfer: (vaultId, body: VaultTransferBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Transfer.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    rewards: (vaultId: string, body: VaultDistributedRewardsBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Rewards.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    usp: (vaultId: string, body: VaultTransferUSPBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Usp.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    epoch: (vaultId: string, body: VaultTransferEpochBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Epoch.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    sync: (vaultId, body: VaultSyncBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Sync.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    syncBlock: (vaultId, body: VaultSyncBlockBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1SyncBlock.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    block: (vaultId, body: VaultBlockEventBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Block.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    perform: (vaultId, body: VaultPerformBody) =>\n      axios\n        .request({\n          url: VaultRoutes.v1Perform.replace(':vaultId', vaultId),\n          method: 'POST',\n          data: stringify(body),\n        })\n        .then((response) => response.data),\n    cure: (vaultId) =>\n      axios.request({\n        url: VaultRoutes.v1Cure.replace(':vaultId', vaultId),\n        method: 'POST',\n      }),\n  }\n}\n"],"names":["VaultRoutes","uriFy","stringify","createVaultsClient","axios","create","body","request","url","v1Create","method","data","then","response","search","searchParams","v1Search","params","URLSearchParams","undefined","list","page","findOne","readOne","length","Error","position","vaultId","v1Position","replace","performances","v1Performances","integrations","v1Integrations","mint","v1Mint","redeem","v1Redeem","transfer","v1Transfer","rewards","v1Rewards","usp","v1Usp","epoch","v1Epoch","sync","v1Sync","syncBlock","v1SyncBlock","block","v1Block","perform","v1Perform","cure","v1Cure"],"mappings":"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"}