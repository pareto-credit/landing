{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/vaults/vault.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport Web3, { Bytes } from 'web3'\nimport { PayableMethodObject } from 'web3-eth-contract'\n\nimport {\n  DeepPartial,\n  MimeType,\n  sAbiContract,\n  sBCAddress,\n  sBigInt,\n  sBlock,\n  sClientEntity,\n  sDateString,\n  sMimeType,\n  sPageSearchQuery,\n  sStringId,\n} from '../core'\nimport {\n  sWeb3BaseContract,\n  sWeb3Protocol,\n  sWeb3ProtocolContract,\n  Web3ClientModel,\n} from '../web3-client'\nimport {\n  AbiContract,\n  Block,\n  BlockNumber,\n  ClientEntity,\n  Locales,\n  sLocales,\n  Page,\n  PageSearchQuery,\n  iBigInt,\n} from '../core'\nimport {\n  sVaultContractCdoData,\n  sVaultContractCdoEpochData,\n  sVaultContractStrategyData,\n  sVaultTvl,\n  VaultBlock,\n  VaultContractCdoData,\n  VaultContractCdoEpochData,\n  VaultContractStrategyData,\n  VaultTvl,\n} from '../vault-blocks'\nimport {\n  Web3BaseContract,\n  Web3Protocol,\n  Web3ProtocolContract,\n} from '../web3-client'\nimport { VAULTS_ROUTES_KEY } from './vault.const'\nimport { Token } from '../tokens'\nimport { WalletPosition } from '../wallet-performances'\nimport { CampaignRule, sCampaignRule } from '../campaigns'\nimport { WalletBlock } from '../wallet-blocks'\n\n/**\n * Client Vault interface\n */\nexport interface Vault extends VaultData, ClientEntity {}\n\nexport function sVault(isPartial?: boolean) {\n  return S.object()\n    .id('#vault')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sVaultData(isPartial))\n}\n\nexport interface VaultData {\n  // Ext data\n  tokenId: string\n  chainId: string\n  typeId?: string\n  categoryId?: string\n  operatorIds?: string[]\n\n  name: string\n  address: string\n  symbol: string\n  protocol: Web3Protocol\n  contractType: VaultContractType\n  abi: AbiContract\n\n  description?: Locales<string>\n  shortDescription?: Locales<string>\n  caption?: Locales<string>\n  keyInfo?: VaultKeyInfo[]\n\n  visibility: VaultVisibility\n  status: VaultStatus\n\n  feePercentage: number\n  harvestTokenIds?: string[]\n\n  // Reward data\n  rewardPrograms?: VaultRewardProgram[]\n  rewardEmissions?: VaultRewardEmission[]\n\n  // CDO\n  cdo?: VaultCdo\n\n  // CDO Epoch\n  cdoEpoch?: VaultCdoEpoch\n\n  // TODO: move this contract inside either CDO or CdoEpoch)\n  // Strategy\n  strategy?: VaultStrategy\n\n  // POOL\n  pools?: VaultPool[]\n\n  // KYC\n  kyc?: VaultKyc\n\n  // Signatures\n  signatures?: VaultSignature[]\n\n  // External integrations\n  integrations?: VaultIntegration[]\n\n  // Minimum deposit\n  minDeposit?: VaultMinDeposit\n\n  // Documents\n  documents?: VaultDocument[]\n\n  // Campaigns\n  campaigns?: VaultCampaign[]\n\n  // Siblings vaults\n  siblings?: VaultSibling[]\n}\n\nexport function sVaultData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('tokenId', sStringId())\n    .prop('chainId', sStringId())\n    .prop('typeId', sStringId())\n    .prop('categoryId', sStringId())\n    .prop('operatorIds', S.array().items(S.string()))\n    .prop('name', S.string())\n    .prop('address', sBCAddress())\n    .prop('symbol', S.string())\n    .prop('protocol', sWeb3Protocol())\n    .prop('contractType', sVaultContractType())\n    .prop('abi', sAbiContract())\n    .prop('description', sLocales())\n    .prop('shortDescription', sLocales())\n    .prop('caption', sLocales())\n    .prop('keyInfo', S.array().items(sVaultKeyInfo()))\n    .prop('visibility', sVaultVisibility())\n    .prop('status', sVaultStatus())\n    .prop('feePercentage', S.number())\n    .prop('harvestTokenIds', S.array().items(S.string()))\n    .prop('rewardPrograms', S.array().items(sVaultRewardProgram()))\n    .prop('rewardEmissions', S.array().items(sVaultRewardEmission()))\n    .prop('cdo', sVaultCdo())\n    .prop('cdoEpoch', sVaultCdoEpoch())\n    .prop('strategy', sVaultStrategy())\n    .prop('pools', S.array().items(sVaultPool()))\n    .prop('kyc', sVaultKyc())\n    .prop('signatures', S.array().items(sVaultSignature()))\n    .prop('integrations', S.array().items(sVaultIntegration()))\n    .prop('minDeposit', sVaultMinDeposit())\n    .prop('documents', S.array().items(sVaultDocument()))\n    .prop('campaigns', S.array().items(sVaultCampaign()))\n    .prop('siblings', S.array().items(sVaultSibling()))\n    .required(\n      isPartial\n        ? []\n        : [\n            'tokenId',\n            'chainId',\n            'name',\n            'address',\n            'symbol',\n            'protocol',\n            'contractType',\n            'abi',\n            'visibility',\n            'status',\n            'feePercentage',\n          ]\n    )\n}\n\nexport interface VaultIntegrationParams {\n  chainId?: number\n}\n\nexport interface VaultIntegration {\n  provider: VaultIntegrationProvider\n  type: VaultIntegrationType\n  params?: VaultIntegrationParams\n}\n\nexport interface VaultIntegrationsData {\n  APR?: number\n}\n\nexport type VaultIntegrationProvider = 'Usual' | 'Lido' | 'Instadapp' | 'Ethena'\nexport type VaultIntegrationType = 'APR' | 'strategyAPR'\n\nexport function sVaultIntegrationProvider() {\n  return S.string().enum(['Usual', 'Lido', 'Instadapp', 'Ethena'])\n}\n\nexport function sVaultIntegrationType() {\n  return S.string().enum(['APR', 'strategyAPR'])\n}\n\nexport function sVaultIntegration() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('provider', sVaultIntegrationProvider())\n    .required()\n    .prop('type', sVaultIntegrationType())\n    .required()\n    .prop('params', sVaultIntegrationParams())\n}\n\nexport function sVaultIntegrationParams() {\n  return S.object().additionalProperties(false).prop('chainId', S.number())\n}\n\nexport function sVaultIntegrationsData() {\n  return S.object().additionalProperties(false).prop('APR', S.number())\n}\n\nexport type VaultCdo = Web3BaseContract\n\nexport interface VaultCdoEpoch extends Web3BaseContract {\n  manager: VaultCdoEpochOperator\n  borrower: VaultCdoEpochOperator\n  waitingPeriod?: number\n  mode: VaultCdoEpochMode\n  depositQueue?: Web3BaseContract\n  withdrawQueue?: Web3BaseContract\n}\n\nexport type VaultCdoEpochMode = 'STRATEGY' | 'CREDIT'\n\nexport interface VaultCdoEpochOperator {\n  address: string\n  operatorId?: string\n}\n\nexport function sVaultCdo() {\n  return S.object().additionalProperties(false).extend(sWeb3BaseContract())\n}\n\nexport function sVaultCdoEpoch() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('borrower', sVaultCdoEpochOperator())\n    .required()\n    .prop('manager', sVaultCdoEpochOperator())\n    .required()\n    .prop('mode', S.string().enum(['STRATEGY', 'CREDIT']))\n    .required()\n    .prop('waitingPeriod', S.number())\n    .prop('depositQueue', sWeb3BaseContract())\n    .prop('withdrawQueue', sWeb3BaseContract())\n    .extend(sWeb3BaseContract())\n}\n\nexport function sVaultCdoEpochOperator() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('address', S.string())\n    .description('Operator wallet address')\n    .required()\n    .prop('operatorId', S.string())\n    .description('Operator entity ID')\n}\n\nexport type VaultStrategy = Web3BaseContract\n\nexport function sVaultStrategy() {\n  return S.object().additionalProperties(false).extend(sWeb3BaseContract())\n}\n\nexport interface VaultPool extends Web3ProtocolContract {\n  oracle?: {\n    protocol?: Web3Protocol\n    address: string\n    abi: AbiContract\n  }\n}\n\nexport function sVaultPool() {\n  return S.object()\n    .additionalProperties(false)\n    .prop(\n      'oracle',\n      S.object()\n        .additionalProperties(false)\n        .prop('address', sBCAddress())\n        .required()\n        .prop('abi', sAbiContract())\n        .required()\n        .prop('protocol', S.string())\n    )\n    .extend(sWeb3ProtocolContract())\n}\n\nexport type VaultRewardProgramFrequencyUnit = 'D' | 'W' | 'M' | 'Y'\n\nexport function sVaultRewardProgramFrequencyUnit() {\n  return S.string().enum(['D', 'W', 'M', 'Y'])\n}\n\nexport interface VaultRewardProgramFrequency {\n  value: number\n  unit: VaultRewardProgramFrequencyUnit\n}\n\nexport function sVaultRewardProgramFrequency() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('value', S.number())\n    .required()\n    .prop('unit', sVaultRewardProgramFrequencyUnit())\n    .required()\n}\n\nexport interface VaultRewardProgram {\n  tokenId: string\n  tokenAddress?: string\n  isActive: boolean\n\n  distributionType: VaultDistributionType\n  distributionValue: iBigInt\n  distributionFrequency: VaultRewardProgramFrequency\n  startBlock?: number\n  endBlock?: number\n  blocksAmount?: number\n  senderAddresses?: string[]\n  excludedAddresses?: VaultRewardAddress[]\n}\n\nexport function sVaultRewardProgram() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('tokenId', sStringId())\n    .required()\n    .prop('isActive', S.boolean())\n    .required()\n    .prop('distributionType', sVaultDistributionType())\n    .required()\n    .prop('distributionValue', sBigInt())\n    .required()\n    .prop('distributionFrequency', sVaultRewardProgramFrequency())\n    .required()\n    .prop('startBlock', S.number())\n    .prop('endBlock', S.number())\n    .prop('blocksAmount', S.number())\n    .prop('tokenAddress', sBCAddress())\n    .prop('senderAddresses', S.array().items(sBCAddress()))\n    .prop('excludedAddresses', S.array().items(sVaultRewardAddress()))\n}\n\nexport type VaultContractType = 'BestYield' | 'CDO' | 'CDO_EPOCH'\n\nexport function sVaultContractType() {\n  return S.string().enum(['BestYield', 'CDO', 'CDO_EPOCH'])\n}\n\nexport type VaultNonPayableMethodType =\n  | 'IS_WALLET_ALLOWED'\n  | 'WALLET_BALANCE'\n  | 'WALLET_DEPOSIT'\n  | 'WALLET_ALLOWANCE'\n  | 'WALLET_ALLOWANCE_LP'\n  | 'WALLET_WITHDRAWABLE'\n\nexport interface VaultNonPayableMethodOptions {\n  walletAddress?: string\n  spender?: string\n}\n\nexport type VaultPayableMethodType =\n  | 'START_EPOCH'\n  | 'STOP_EPOCH'\n  | 'STOP_EPOCH_WITH_DURATION'\n  | 'DEFAULT'\n  | 'APPROVE'\n  | 'APPROVE_LP'\n  | 'SET_EPOCH_PARAMS'\n  | 'SET_EPOCH_APR'\n  | 'GET_INSTANT_WITHDRAWS'\n  | 'PROCESS_WITHDRAW_QUEUE'\n  | 'PROCESS_DEPOSIT_QUEUE'\n  | 'PROCESS_WITHDRAWAL_CLAIMS'\n  | 'DEPOSIT'\n  | 'REQUEST_DEPOSIT'\n  | 'WITHDRAW'\n  | 'REQUEST_WITHDRAW'\n  | 'CLAIM_WITHDRAW'\n  | 'CLAIM_INSTANT_WITHDRAW'\n  | 'CLAIM_WITHDRAW_REQUEST'\n  | 'CANCEL_WITHDRAW_REQUEST'\n  | 'CLAIM_DEPOSIT_REQUEST'\n  | 'CANCEL_DEPOSIT_REQUEST'\n\nexport interface VaultPayableMethodOptions {\n  epochAPR?: string\n  epochAPRScaled?: string\n  epochInterests?: string\n  epochDuration?: number\n  epochNumber?: number\n  bufferDuration?: number\n  amount?: string\n  spender?: string\n  overwriteInterests?: boolean\n}\n\nexport interface VaultRewardAddress {\n  address: string\n  toRedistribute: boolean\n}\n\nexport function sVaultRewardAddress() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('address', sBCAddress())\n    .required()\n    .prop('toRedistribute', S.boolean())\n    .required()\n}\n\nexport interface VaultRewardEmission {\n  tokenId: string\n  emissionRate: iBigInt\n  frequency: 'BLOCK' | 'SECOND'\n  startBlock?: number\n  endBlock?: number\n}\n\nexport function sVaultRewardEmission() {\n  return S.object().additionalProperties(false)\n}\n\nexport interface VaultCampaign {\n  _id: string\n  rules?: CampaignRule[]\n  isActive: boolean\n}\n\nexport function sVaultCampaign() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('_id', sStringId())\n    .required()\n    .prop('rules', S.array().items(sCampaignRule()))\n    .prop('isActive', S.boolean())\n    .required()\n}\n\nexport interface VaultSibling {\n  _id: string\n  chainId: string\n}\n\nexport function sVaultSibling() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('_id', sStringId())\n    .required()\n    .prop('chainId', sStringId())\n    .required()\n}\n\nexport interface VaultBlockEventBody {\n  block: Block\n  vaultData: VaultContractData\n}\n\nexport interface VaultTransferBody {\n  block: Block\n  fromAddress?: string\n  toAddress?: string\n  amount?: iBigInt\n  price?: iBigInt\n  tokenAmount?: iBigInt\n  transactionHash: string\n  transactionInput?: Bytes\n  vaultData: VaultContractData\n}\n\nexport function sVaultBaseTransactionBody() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('block', sBlock())\n    .description('Block')\n    .required()\n    .prop('transactionHash', S.string())\n    .description('Transaction hash')\n    .required()\n    .prop('vaultData', sVaultContractData())\n    .description(`VaultBlock data`)\n    .required()\n    .prop('transactionInput', S.string())\n    .description('Transaction input')\n    .prop('amount', sBigInt())\n    .description(`Amount`)\n    .prop('price', sBigInt())\n    .description(`Price`)\n    .prop('tokenAmount', sBigInt())\n    .description(`tokenAmount`)\n    .prop('walletAddress')\n    .description('Wallet address')\n}\n\nexport function sVaultTransferBody() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('fromAddress', sBCAddress())\n    .description('Wallet from address')\n    .prop('toAddress', sBCAddress())\n    .description('Wallet to address')\n    .extend(sVaultBaseTransactionBody())\n}\n\nexport interface VaultMintRedeemBody {\n  block: Block\n  address: string\n  amount: iBigInt\n  transactionHash: string\n  transactionInput?: Bytes\n  vaultData: VaultContractData\n}\n\nexport function sVaultMintRedeemBody() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('address', sBCAddress())\n    .description('Wallet address')\n    .extend(sVaultBaseTransactionBody())\n}\n\nexport interface VaultDistributedRewardsBody {\n  block: Block\n  amount: iBigInt\n  tokenAddress: string\n  fromAddress: string\n  toAddress: string\n  transactionHash: string\n  transactionInput?: Bytes\n  vaultData: VaultContractData\n}\n\nexport function sVaultDistributedRewardsBody() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('fromAddress', sBCAddress())\n    .description('Rewards sender address')\n    .required()\n    .prop('toAddress', sBCAddress())\n    .description('Rewards recipient address')\n    .required()\n    .prop('tokenAddress', sBCAddress())\n    .description('Reward token address')\n    .required()\n    .extend(sVaultBaseTransactionBody())\n}\n\nexport type VaultTransferEpochType =\n  | 'CLAIM_DEPOSIT_REQUEST'\n  | 'CLAIM_INSTANT_WITHDRAW'\n  | 'CLAIM_WITHDRAW'\n  | 'DELETE_DEPOSIT_REQUEST'\n  | 'GET_INSTANT_WITHDRAWS'\n  | 'PROCESS_DEPOSIT_QUEUE'\n  | 'REQUEST_DEPOSIT'\n  | 'START_EPOCH'\n  | 'STOP_EPOCH'\n  | 'REQUEST_WITHDRAW'\n  | 'DELETE_WITHDRAW_REQUEST'\n  | 'PROCESS_WITHDRAW_QUEUE'\n  | 'CLAIM_WITHDRAW_REQUEST'\n  | 'PROCESS_WITHDRAW_CLAIMS'\n\nexport function sVaultTransferEpochType() {\n  return S.string().enum([\n    'CLAIM_INSTANT_WITHDRAW',\n    'CLAIM_WITHDRAW',\n    'DELETE_DEPOSIT_REQUEST',\n    'GET_INSTANT_WITHDRAWS',\n    'PROCESS_DEPOSIT_QUEUE',\n    'CLAIM_DEPOSIT_REQUEST',\n    'REQUEST_DEPOSIT',\n    'START_EPOCH',\n    'STOP_EPOCH',\n    'REQUEST_WITHDRAW',\n    'DELETE_WITHDRAW_REQUEST',\n    'PROCESS_WITHDRAW_QUEUE',\n    'CLAIM_WITHDRAW_REQUEST',\n    'PROCESS_WITHDRAW_CLAIMS',\n  ])\n}\n\nexport interface VaultTransferEpochBody {\n  block: Block\n  amount?: iBigInt\n  walletAddress?: string\n  tokenAmount?: iBigInt\n  transactionHash: string\n  vaultData: VaultContractData\n  action: VaultTransferEpochType\n  transactionInput?: Bytes\n}\n\nexport function sVaultTransferEpochBody() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('action', sVaultTransferEpochType())\n    .description('Epoch action')\n    .required()\n    .extend(sVaultBaseTransactionBody())\n}\n\nexport interface VaultPerformBody {\n  block: Block\n}\n\nexport interface VaultSyncBlockBody {\n  blockNumber?: string\n}\n\nexport interface VaultSyncBody {\n  startBlock?: string\n  endBlock?: string\n}\n\nexport type VaultDistributionType = 'AMOUNT' | 'TARGET_APY'\n\nexport function sVaultDistributionType() {\n  return S.string().enum(['AMOUNT', 'TARGET_APY'])\n}\n\n/**\n * - `HIDDEN`: The vault is not visible to any user. It is completely hidden from the interface.\n * - `RESTRICTED`: The vault is visible only to a specific group of users or under certain conditions. Access is limited.\n * - `PUBLIC`: The vault is visible and accessible to all users without restrictions.\n */\nexport type VaultVisibility = 'HIDDEN' | 'RESTRICTED' | 'PUBLIC'\n\nexport function sVaultVisibility() {\n  return S.string().enum(['HIDDEN', 'RESTRICTED', 'PUBLIC'])\n}\n\nexport type VaultStatus =\n  | 'PAUSED'\n  | 'DISABLED'\n  | 'READY'\n  | 'EXPERIMENTAL'\n  | 'BOOSTED'\n\nexport function sVaultStatus() {\n  return S.string().enum([\n    'PAUSED',\n    'DISABLED',\n    'READY',\n    'EXPERIMENTAL',\n    'BOOSTED',\n  ])\n}\n\nexport interface VaultsPerformances {\n  TVL: iBigInt\n  tokens: VaultsPerformancesToken[]\n  chains: VaultsPerformancesChain[]\n  APRs: VaultsPerformancesAPRs\n  vaults: number\n}\n\nexport function sVaultsPerformances() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('TVL', sBigInt())\n    .required()\n    .prop('APRs', sVaultsPerformancesAPRs())\n    .required()\n    .prop(\n      'tokens',\n      S.array().minItems(1).maxItems(200).items(sVaultsPerformancesToken())\n    )\n    .required()\n    .prop(\n      'chains',\n      S.array().minItems(1).maxItems(200).items(sVaultsPerformancesToken())\n    )\n    .required()\n    .prop('vaults')\n    .required()\n}\n\nexport interface VaultsPerformancesToken {\n  token: string\n  TVL: VaultTvl\n  APR: number\n}\n\nexport interface VaultsPerformancesChain {\n  chain: string\n  TVL: VaultTvl\n  APR: number\n}\n\nexport function sVaultsPerformancesToken() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('token', S.string())\n    .required()\n    .prop('TVL', sVaultTvl())\n    .required()\n    .prop('APR', S.number())\n    .required()\n}\n\nexport function sVaultsPerformancesChain() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('chain', S.string())\n    .required()\n    .prop('TVL', sVaultTvl())\n    .required()\n    .prop('APR', S.number())\n    .required()\n}\n\nexport interface VaultsPerformancesAPRs {\n  MAX: number\n  MIN: number\n  AVG: number\n}\n\nexport function sVaultsPerformancesAPRs() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('MIN')\n    .required()\n    .prop('MAX')\n    .required()\n    .prop('AVG')\n    .required()\n}\n\nexport enum VaultErrorCodes {\n  collision = 'VAULT_COLLISION',\n  notFound = 'VAULT_NOT_FOUND',\n  notDeletable = 'VAULT_NOT_DELETABLE',\n  blockNotValid = 'VAULT_BLOCK_NOT_VALID',\n  walletRequired = 'VAULT_WALLET_REQUIRED',\n  integrationError = 'VAULT_INTEGRATION_ERROR',\n}\n\nexport interface VaultIntegrationsQuery {\n  provider?: VaultIntegrationProvider | VaultIntegrationProvider[]\n  type?: VaultIntegrationType | VaultIntegrationType[]\n}\n\nexport function sVaultIntegrationsQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop(\n      'provider',\n      S.array().minItems(1).maxItems(200).items(sVaultIntegrationProvider())\n    )\n    .prop(\n      'type',\n      S.array().minItems(1).maxItems(200).items(sVaultIntegrationType())\n    )\n}\n\nexport interface VaultsPerformancesQuery extends PageSearchQuery {\n  symbol?: string\n  status?: VaultStatus\n  chainId?: string | string[]\n  visibility?: VaultVisibility\n  contractType?: VaultContractType\n}\n\nexport function sVaultsPerformancesQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('status', sVaultStatus())\n    .description('Status of the vault that must match.')\n    .prop('visibility', sVaultVisibility())\n    .description('Visibility of the vault that must match.')\n    .prop('symbol', S.string())\n    .description('Symbol of the vault that must match.')\n    .prop('chainId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('ChainID of the vault that must match.')\n    .prop('contractType', sVaultContractType())\n    .description('Contract type of the vault that must match.')\n    .extend(sPageSearchQuery())\n}\n\nexport interface VaultPositionQuery {\n  walletId?: string\n  walletAddress?: string\n  'block:gte'?: Block['number']\n  'block:lte'?: Block['number']\n  'timestamp:gte'?: Block['timestamp']\n  'timestamp:lte'?: Block['timestamp']\n}\n\nexport function sVaultPositionQuery() {\n  S.object()\n    .additionalProperties(false)\n    .prop('walletId', sStringId())\n    .description('Wallet Identifier')\n    .prop('walletAddress', sBCAddress())\n    .description('Wallet address')\n    .prop('block:gte', S.number())\n    .description('Start block')\n    .prop('block:lte', S.number())\n    .description('End Block')\n    .prop('timestamp:hte', S.number())\n    .description('Start timestamp')\n    .prop('timestamp:lte', S.number())\n    .description('End timestamp')\n}\n\nexport type VaultFields =\n  | '_id'\n  | 'tokenId'\n  | 'chainId'\n  | 'typeId'\n  | 'categoryId'\n  | 'operatorIds'\n  | 'name'\n  | 'kyc'\n  | 'address'\n  | 'symbol'\n  | 'protocol'\n  | 'contractType'\n  | 'abi'\n  | 'description'\n  | 'visibility'\n  | 'status'\n  | 'feePercentage'\n  | 'harvestTokenIds'\n  | 'rewardPrograms'\n  | 'rewardEmissions'\n  | 'cdo'\n  | 'campaigns'\n  | 'documents'\n  | 'cdoEpoch'\n  | 'strategy'\n  | 'pools'\n  | 'createdAt'\n  | 'createdBy'\n  | 'updatedAt'\n  | 'updatedBy'\n\nexport const VAULT_FIELDS = [\n  '_id',\n  'tokenId',\n  'chainId',\n  'typeId',\n  'categoryId',\n  'operatorIds',\n  'name',\n  'kyc',\n  'address',\n  'symbol',\n  'protocol',\n  'contractType',\n  'abi',\n  'description',\n  'visibility',\n  'status',\n  'feePercentage',\n  'harvestTokenIds',\n  'rewardPrograms',\n  'rewardEmissions',\n  'cdo',\n  'campaigns',\n  'documents',\n  'cdoEpoch',\n  'strategy',\n  'pools',\n  'createdAt',\n  'createdBy',\n  'updatedAt',\n  'updatedBy',\n]\n\nexport const VAULT_SORT_FIELDS = ['name']\n\nexport type VaultSideData =\n  | 'block'\n  | 'token'\n  | 'operator'\n  | 'chain'\n  | 'KYC'\n  | 'epoch'\n  | 'signature'\n  | 'performance'\n  | 'campaign'\n  | 'sibling'\n\nexport interface VaultsSearchQuery\n  extends PageSearchQuery<'name', VaultFields> {\n  name?: string\n  cdo?: string\n  'name:ct'?: string\n  address?: string\n  manager?: string\n  symbol?: string\n  status?: VaultStatus\n  chainId?: string | string[]\n  visibility?: VaultVisibility | VaultVisibility[]\n  'visibility:ne'?: VaultVisibility | VaultVisibility[]\n  contractType?: VaultContractType\n  'cdoEpoch.borrower.address'?: string | string[]\n  'cdoEpoch.borrower.operatorId'?: string | string[]\n  'cdoEpoch.manager.address'?: string | string[]\n  'cdoEpoch.manager.operatorId'?: string | string[]\n}\n\nexport function sVaultsSearchQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('name', S.string())\n    .description('Name of the vault that must match.')\n    .prop('name:ct', S.string())\n    .description('Name of the vault that must be contained.')\n    .prop('address', sBCAddress())\n    .description('Address of the vault that must match.')\n    .prop('status', sVaultStatus())\n    .description('Status of the vault that must match.')\n    .prop(\n      'visibility',\n      S.array().minItems(1).maxItems(3).items(sVaultVisibility())\n    )\n    .description('Visibility of the vault that must match.')\n    .prop(\n      'visibility:ne',\n      S.array().minItems(1).maxItems(3).items(sVaultVisibility())\n    )\n    .description('Visibility of the vault that must be different.')\n    .prop(\n      'cdoEpoch.borrower.address',\n      S.array().minItems(1).maxItems(200).items(sBCAddress())\n    )\n    .description(`Borrower's address of the vault that must match.`)\n    .prop(\n      'cdoEpoch.borrower.operatorId',\n      S.array().minItems(1).maxItems(200).items(S.string())\n    )\n    .description(`Borrower's operator ID of the vault that must match.`)\n    .prop(\n      'cdoEpoch.manager.address',\n      S.array().minItems(1).maxItems(200).items(sBCAddress())\n    )\n    .description(`Manager's address of the vault that must match.`)\n    .prop(\n      'cdoEpoch.manager.operatorId',\n      S.array().minItems(1).maxItems(200).items(S.string())\n    )\n    .description(`Manager's operator ID of the vault that must match.`)\n    .prop('cdo', S.string())\n    .description('CDO of the vault that must match.')\n    .prop('symbol', S.string())\n    .description('Symbol of the vault that must match.')\n    .prop('chainId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('ChainID of the vault that must match.')\n    .prop('contractType', sVaultContractType())\n    .description('Contract type of the vault that must match.')\n    .extend(sPageSearchQuery(VAULT_FIELDS, VAULT_SORT_FIELDS))\n}\n\nexport interface VaultsClient {\n  create: (body: VaultData) => Promise<Vault>\n  search: (params?: VaultsSearchQuery) => Promise<Page<Vault>>\n  list: (params?: VaultsSearchQuery) => Promise<Vault[]>\n  findOne: (params: VaultsSearchQuery) => Promise<Vault | undefined>\n  readOne: (params: VaultsSearchQuery) => Promise<Vault>\n  position: (\n    vaultId: string,\n    params: VaultPositionQuery\n  ) => Promise<WalletPosition>\n  mint: (vaultId: string, body: VaultMintRedeemBody) => Promise<VaultBlock>\n  redeem: (vaultId: string, body: VaultMintRedeemBody) => Promise<VaultBlock>\n  transfer: (vaultId: string, body: VaultTransferBody) => Promise<VaultBlock>\n  rewards: (\n    vaultId: string,\n    body: VaultDistributedRewardsBody\n  ) => Promise<WalletBlock>\n  sync: (vaultId: string, body: VaultSyncBody) => Promise<number>\n  syncBlock: (vaultId: string, body: VaultSyncBlockBody) => Promise<boolean>\n  block: (vaultId: string, body: VaultBlockEventBody) => Promise<void>\n  perform: (vaultId: string, body: VaultPerformBody) => Promise<void>\n  epoch: (vaultId: string, body: VaultTransferEpochBody) => Promise<VaultBlock>\n  cure: (vaultId: string) => Promise<void>\n  integrations: (\n    vaultId: string,\n    params: VaultIntegrationsQuery\n  ) => Promise<VaultIntegrationsData>\n}\n\nexport enum VaultsRoutingKey {\n  idleEvents = 'idle.vault.*',\n  idleSync = 'idle.vault.sync',\n  idleCreated = 'idle.vault.created',\n  idleUpdate = 'idle.vault.update',\n  idleTransfered = 'idle.vault.transfered',\n  idlePerformed = 'idle.vault.performed',\n  bcEvents = 'bc.vault.*',\n  bcTransfer = 'bc.vault.transfer',\n}\n\nexport interface VaultContractAPRs {\n  BASE?: iBigInt\n}\n\nexport function sVaultContractAPRs() {\n  return S.object().additionalProperties(false).prop('BASE', sBigInt())\n}\n\nexport interface VaultContractData {\n  // General Vault INFO\n  APRs?: VaultContractAPRs\n  allocations?: iBigInt[]\n  availableTokens?: string[]\n  price?: iBigInt\n  totalSupply?: iBigInt\n\n  // CDO additional data\n  cdo?: VaultContractDataCdo\n\n  // CDO Epoch variant additional data\n  cdoEpoch?: VaultContractDataCdoEpoch\n\n  // Strategy additional data\n  strategy?: VaultContractStrategyData\n\n  // Pool additional data\n  pools?: VaultContractPoolData[]\n\n  // Wallet data\n  wallets?: VaultWalletData[]\n\n  // Tokens data\n  tokens?: VaultContractTokenData[]\n\n  // Integrations data\n  integrations?: VaultIntegrationsData\n\n  // Previous contract block data\n  previous?: VaultContractData\n}\n\nexport interface VaultContractDataCdo\n  extends DeepPartial<VaultContractCdoData> {}\n\nexport interface VaultContractDataCdoEpoch\n  extends DeepPartial<VaultContractCdoEpochData> {}\n\nexport function sVaultContractData() {\n  return S.object()\n    .additionalProperties(false)\n    .description('The vault contract blockchain data')\n    .prop('previous', sContractData())\n    .extend(sContractData())\n}\n\nfunction sContractData() {\n  return S.object()\n    .additionalProperties(false)\n    .description('The vault contract blockchain data')\n    .prop('APRs', sVaultContractAPRs())\n    .prop('totalSupply', sBigInt())\n    .prop('strategy', sVaultContractStrategyData())\n    .prop('price', sBigInt())\n    .prop('allocations', S.array().items(sBigInt()))\n    .prop('availableTokens', S.array().items(sBCAddress()))\n    .prop('pools', S.array().items(sVaultContractPoolData()))\n    .prop('cdo', sVaultContractCdoData())\n    .prop('tokens', S.array().items(sVaultContractTokenData()))\n    .prop('cdoEpoch', sVaultContractCdoEpochData())\n    .prop('wallets', S.array().items(sVaultWalletData()))\n    .prop('integrations', sVaultIntegrationsData())\n}\n\nexport interface VaultContractTokenData {\n  address: string\n  price: iBigInt\n}\n\nexport function sVaultContractTokenData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('price', sBigInt())\n    .required()\n    .prop('address', sBCAddress())\n    .required()\n}\n\nexport interface VaultWalletData {\n  address: string\n  balance: iBigInt\n  cdoEpoch?: VaultWalletCdoEpochData\n}\n\nexport function sVaultWalletData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('address', sBCAddress())\n    .required()\n    .prop('balance', sBigInt())\n    .required()\n    .prop('cdoEpoch', sVaultWalletCdoEpochData())\n}\n\nexport interface VaultWalletCdoEpochData {\n  pendingDepositAmount?: iBigInt\n  pendingWithdrawAmount?: iBigInt\n  withdrawsRequests?: iBigInt\n  instantWithdrawsRequests?: iBigInt\n}\n\nexport function sVaultWalletCdoEpochData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('pendingDepositAmount')\n    .description('Deposit queue pending amount')\n    .prop('pendingWithdrawAmount')\n    .description('Withdraw queue pending amount')\n    .prop('withdrawsRequests')\n    .description('Standard withdraw requests')\n    .prop('instantWithdrawsRequests')\n    .description('Instant withdraw requests')\n}\n\nexport interface VaultContractPoolData {\n  protocol: Web3Protocol\n  address: string\n  supplyRate?: iBigInt\n  borrowRate?: iBigInt\n  exchangeRate?: iBigInt\n  utilizationRate?: iBigInt\n  availableToBorrow?: iBigInt\n  availableToWithdraw?: iBigInt\n  totalSupply?: iBigInt\n  totalBorrow?: iBigInt\n}\n\nexport function sVaultContractPoolData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('protocol', sWeb3Protocol())\n    .required()\n    .prop('address', sBCAddress())\n    .required()\n    .prop('supplyRate', sBigInt())\n    .prop('borrowRate', sBigInt())\n    .prop('exchangeRate', sBigInt())\n    .prop('utilizationRate', sBigInt())\n    .prop('availableToBorrow', sBigInt())\n    .prop('availableToWithdraw', sBigInt())\n    .prop('totalSupply', sBigInt())\n    .prop('totalBorrow', sBigInt())\n}\n\nexport interface VaultKyc {\n  policyId: number\n  isActive: boolean\n  link?: string\n  hideSensitiveData?: boolean\n}\n\nexport function sVaultKyc() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('policyId', S.number())\n    .required()\n    .prop('isActive', S.boolean())\n    .required()\n    .prop('link', S.string())\n    .prop('hideSensitiveData', S.boolean())\n}\n\nexport interface VaultKycData {\n  vaultId: string\n  isActive: boolean\n  isWalletAllowed?: boolean\n}\n\nexport interface VaultKeyInfo {\n  label: Locales<string>\n  value: Locales<string>\n  link?: string\n}\n\nexport function sVaultKeyInfo() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('label', sLocales())\n    .required()\n    .prop('value', sLocales())\n    .required()\n    .prop('link', S.string())\n}\n\nexport interface VaultMinDeposit {\n  amount: iBigInt\n  isActive: boolean\n  enableTest?: boolean\n}\n\nexport function sVaultMinDeposit() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('amount', sBigInt())\n    .required()\n    .prop('isActive', S.boolean())\n    .required()\n    .prop('enableTest', S.boolean())\n}\n\nexport interface VaultDocument {\n  name: string\n  type: MimeType\n  createdAt: string\n  url: string\n}\n\nexport function sVaultDocument() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('name', S.string())\n    .required()\n    .prop('type', sMimeType())\n    .required()\n    .prop('createdAt', sDateString())\n    .required()\n    .prop('url', S.string().format('url'))\n    .required()\n}\n\nexport type VaultSignatureEntity = 'ALL' | 'LENDER' | 'MANAGER'\n\nexport function sVaultSignatureEntity() {\n  return S.string().enum(['ALL', 'LENDER', 'MANAGER'])\n}\n\nexport interface VaultSignature {\n  _id: string\n  entity: VaultSignatureEntity\n}\n\nexport function sVaultSignature() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('_id', sStringId())\n    .required()\n    .prop('entity', sVaultSignatureEntity())\n    .required()\n}\n\nexport interface VaultContractOptions {\n  web3?: Web3\n  web3Client?: Web3ClientModel\n  walletAddresses?: string[]\n  rewardTokens?: Token[]\n}\n\nexport interface VaultContractModel {\n  getContractData: (blockNumber?: BlockNumber) => Promise<VaultContractData>\n  getValue: <T>(\n    type: VaultNonPayableMethodType,\n    params?: VaultNonPayableMethodOptions\n  ) => Promise<T> | undefined\n  getPayableMethod: (\n    type: VaultPayableMethodType,\n    params?: VaultPayableMethodOptions\n  ) => PayableMethodObject | undefined\n}\n\nexport interface VaultPerformanceValue {\n  date: string\n  value: number\n}\n\nexport enum VaultRoutes {\n  v1Create = `v1/${VAULTS_ROUTES_KEY}`,\n  v1Delete = `v1/${VAULTS_ROUTES_KEY}/:vaultId`,\n  v1Read = `v1/${VAULTS_ROUTES_KEY}/:vaultId`,\n  v1Update = `v1/${VAULTS_ROUTES_KEY}/:vaultId`,\n  v1Search = `v1/${VAULTS_ROUTES_KEY}`,\n  v1Sync = `v1/${VAULTS_ROUTES_KEY}/:vaultId/sync`,\n  v1Mint = `v1/${VAULTS_ROUTES_KEY}/:vaultId/mint`,\n  v1Rewards = `v1/${VAULTS_ROUTES_KEY}/:vaultId/rewards`,\n  v1Block = `v1/${VAULTS_ROUTES_KEY}/:vaultId/block`,\n  v1Epoch = `v1/${VAULTS_ROUTES_KEY}/:vaultId/epoch`,\n  v1Redeem = `v1/${VAULTS_ROUTES_KEY}/:vaultId/redeem`,\n  v1Transfer = `v1/${VAULTS_ROUTES_KEY}/:vaultId/transfer`,\n  v1Perform = `v1/${VAULTS_ROUTES_KEY}/:vaultId/perform`,\n  v1Cure = `v1/${VAULTS_ROUTES_KEY}/:vaultId/cure`,\n  v1Performances = `v1/${VAULTS_ROUTES_KEY}/performances`,\n  v1Position = `v1/${VAULTS_ROUTES_KEY}/:vaultId/position`,\n  v1SyncBlock = `v1/${VAULTS_ROUTES_KEY}/:vaultId/sync-block`,\n  v1Integrations = `v1/${VAULTS_ROUTES_KEY}/:vaultId/integrations`,\n  v1PerformBlocks = `v1/${VAULTS_ROUTES_KEY}/:vaultId/perform-blocks`,\n  v1PerformWallets = `v1/${VAULTS_ROUTES_KEY}/:vaultId/perform-wallets`,\n}\n"],"names":["S","sAbiContract","sBCAddress","sBigInt","sBlock","sClientEntity","sDateString","sMimeType","sPageSearchQuery","sStringId","sWeb3BaseContract","sWeb3Protocol","sWeb3ProtocolContract","sLocales","sVaultContractCdoData","sVaultContractCdoEpochData","sVaultContractStrategyData","sVaultTvl","VAULTS_ROUTES_KEY","sCampaignRule","sVault","isPartial","object","id","additionalProperties","extend","sVaultData","prop","array","items","string","sVaultContractType","sVaultKeyInfo","sVaultVisibility","sVaultStatus","number","sVaultRewardProgram","sVaultRewardEmission","sVaultCdo","sVaultCdoEpoch","sVaultStrategy","sVaultPool","sVaultKyc","sVaultSignature","sVaultIntegration","sVaultMinDeposit","sVaultDocument","sVaultCampaign","sVaultSibling","required","sVaultIntegrationProvider","enum","sVaultIntegrationType","sVaultIntegrationParams","sVaultIntegrationsData","sVaultCdoEpochOperator","description","sVaultRewardProgramFrequencyUnit","sVaultRewardProgramFrequency","boolean","sVaultDistributionType","sVaultRewardAddress","sVaultBaseTransactionBody","sVaultContractData","sVaultTransferBody","sVaultMintRedeemBody","sVaultDistributedRewardsBody","sVaultTransferEpochType","sVaultTransferEpochBody","sVaultsPerformances","sVaultsPerformancesAPRs","minItems","maxItems","sVaultsPerformancesToken","sVaultsPerformancesChain","VaultErrorCodes","sVaultIntegrationsQuery","sVaultsPerformancesQuery","sVaultPositionQuery","VAULT_FIELDS","VAULT_SORT_FIELDS","sVaultsSearchQuery","VaultsRoutingKey","sVaultContractAPRs","sContractData","sVaultContractPoolData","sVaultContractTokenData","sVaultWalletData","sVaultWalletCdoEpochData","format","sVaultSignatureEntity","VaultRoutes"],"mappings":"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"}