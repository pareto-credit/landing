{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/users/user.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport {\n  ClientEntity,\n  Page,\n  PageSearchQuery,\n  sClientEntity,\n  sEmail,\n  sPageSearchQuery,\n} from '../core'\nimport { USERS_ROUTES_KEY } from './user.const'\n\n/**\n * Client Vault interface\n */\nexport interface User extends UserData, ClientEntity {}\n\nexport function sUser(isPartial?: boolean) {\n  return S.object()\n    .id('#user')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sUserData(isPartial))\n}\n\nexport interface UserData {\n  name: string\n  email?: string\n  telegram?: string\n  credentials?: UserCredentials\n}\n\nexport function sUserData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('name', S.string())\n    .prop('email', sEmail())\n    .prop('telegram', S.string())\n    .prop('credentials', sUserCredentials())\n    .required(isPartial ? [] : ['name'])\n}\n\nexport interface UserCredentials {\n  username: string\n  password: string\n}\n\nexport function sUserCredentials() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('username', S.string())\n    .required()\n    .prop('password', S.string())\n    .required()\n}\n\nexport enum UserErrorCodes {\n  userCollision = 'USER_COLLISION',\n  notFound = 'USER_NOT_FOUND',\n  notDeletable = 'USER_NOT_DELETABLE',\n  samePassword = 'USER_SAME_PASSWORD',\n  wrongPassword = 'USER_WRONG_PASSWORD',\n}\n\nexport type UserFields =\n  | '_id'\n  | 'name'\n  | 'email'\n  | 'createdAt'\n  | 'createdBy'\n  | 'updatedAt'\n  | 'updatedBy'\n\nexport const USER_FIELDS = [\n  '_id',\n  'name',\n  'email',\n  'createdAt',\n  'createdBy',\n  'updatedAt',\n  'updatedBy',\n]\n\nexport const USER_SORT_FIELDS = ['_id', 'name']\n\nexport enum UserRoutes {\n  v1Create = `v1/${USERS_ROUTES_KEY}`,\n  v1Delete = `v1/${USERS_ROUTES_KEY}/:userId`,\n  v1Read = `v1/${USERS_ROUTES_KEY}/:userId`,\n  v1Update = `v1/${USERS_ROUTES_KEY}/:userId`,\n  v1Search = `v1/${USERS_ROUTES_KEY}`,\n  v1ChangePassword = `v1/${USERS_ROUTES_KEY}/:userId/change-password`,\n}\n\nexport interface UsersSearchQuery extends PageSearchQuery<'name', UserFields> {\n  name?: string\n  'name:ct'?: string\n  email?: string\n}\n\nexport function sUsersSearchQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('name', S.string())\n    .description('Name of the user that must match.')\n    .prop('name:ct', S.string())\n    .description('Name of the user that must be contained.')\n    .prop('email', sEmail())\n    .description('Email of the user that must match.')\n    .extend(sPageSearchQuery(USER_FIELDS, USER_SORT_FIELDS))\n}\n\nexport interface UsersClientModel {\n  findOne: (params?: UsersSearchQuery) => Promise<User | undefined>\n  search: (params?: UsersSearchQuery) => Promise<Page<User>>\n  list: (params?: UsersSearchQuery) => Promise<User[]>\n}\n"],"names":["S","sClientEntity","sEmail","sPageSearchQuery","USERS_ROUTES_KEY","sUser","isPartial","object","id","additionalProperties","extend","sUserData","prop","string","sUserCredentials","required","UserErrorCodes","USER_FIELDS","USER_SORT_FIELDS","UserRoutes","sUsersSearchQuery","description"],"mappings":"AAAA,OAAOA,OAAO,qBAAoB;AAClC,SAIEC,aAAa,EACbC,MAAM,EACNC,gBAAgB,QACX,UAAS;AAChB,SAASC,gBAAgB,QAAQ,eAAc;AAO/C,OAAO,SAASC,MAAMC,SAAmB;IACvC,OAAON,EAAEO,MAAM,GACZC,EAAE,CAAC,SACHC,oBAAoB,CAAC,OACrBC,MAAM,CAACT,cAAcK,YACrBI,MAAM,CAACC,UAAUL;AACtB;AASA,OAAO,SAASK,UAAUL,SAAmB;IAC3C,OAAON,EAAEO,MAAM,GACZE,oBAAoB,CAAC,OACrBG,IAAI,CAAC,QAAQZ,EAAEa,MAAM,IACrBD,IAAI,CAAC,SAASV,UACdU,IAAI,CAAC,YAAYZ,EAAEa,MAAM,IACzBD,IAAI,CAAC,eAAeE,oBACpBC,QAAQ,CAACT,YAAY,EAAE,GAAG;QAAC;KAAO;AACvC;AAOA,OAAO,SAASQ;IACd,OAAOd,EAAEO,MAAM,GACZE,oBAAoB,CAAC,OACrBG,IAAI,CAAC,YAAYZ,EAAEa,MAAM,IACzBE,QAAQ,GACRH,IAAI,CAAC,YAAYZ,EAAEa,MAAM,IACzBE,QAAQ;AACb;;UAEYC;;;;;;GAAAA,mBAAAA;AAiBZ,OAAO,MAAMC,cAAc;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAA;AAED,OAAO,MAAMC,mBAAmB;IAAC;IAAO;CAAO,CAAA;;UAEnCC;wCACC,CAAC,GAAG,EAAEf,iBAAiB,CAAC;wCACxB,CAAC,GAAG,EAAEA,iBAAiB,QAAQ,CAAC;sCAClC,CAAC,GAAG,EAAEA,iBAAiB,QAAQ,CAAC;wCAC9B,CAAC,GAAG,EAAEA,iBAAiB,QAAQ,CAAC;wCAChC,CAAC,GAAG,EAAEA,iBAAiB,CAAC;gDAChB,CAAC,GAAG,EAAEA,iBAAiB,wBAAwB,CAAC;GANzDe,eAAAA;AAeZ,OAAO,SAASC;IACd,OAAOpB,EAAEO,MAAM,GACZE,oBAAoB,CAAC,OACrBG,IAAI,CAAC,QAAQZ,EAAEa,MAAM,IACrBQ,WAAW,CAAC,qCACZT,IAAI,CAAC,WAAWZ,EAAEa,MAAM,IACxBQ,WAAW,CAAC,4CACZT,IAAI,CAAC,SAASV,UACdmB,WAAW,CAAC,sCACZX,MAAM,CAACP,iBAAiBc,aAAaC;AAC1C"}