{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/wallet-blocks/wallet-block.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport { ClientEntity, Block, iBigInt, PageSearchQuery } from '../core'\nimport {\n  sBCAddress,\n  sBigInt,\n  sBlock,\n  sClientEntity,\n  sPageSearchQuery,\n  sStringId,\n} from '../core'\nimport { WALLET_BLOCKS_ROUTES_KEY } from './wallet-block.const'\nimport {\n  sVaultWalletCdoEpochData,\n  sVaultWalletParetoDollarData,\n  VaultWalletCdoEpochData,\n  VaultWalletParetoDollarData,\n} from '../vaults'\n\n/**\n * Client Vault interface\n */\nexport interface WalletBlock extends WalletBlockData, ClientEntity {}\n\nexport function sWalletBlock(isPartial?: boolean) {\n  return S.object()\n    .id('#walletBlock')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sWalletBlockData(isPartial))\n}\n\nexport interface WalletBlockData extends WalletBlockBody {\n  walletId: string\n  walletAddress: string\n  vaultId: string\n  vaultAddress: string\n  block: Block\n}\n\nexport function sWalletBlockData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('walletId', sStringId())\n    .description('The IDentifier of the wallet.')\n    .prop('walletAddress', sBCAddress())\n    .description('The blockchain address of the wallet.')\n    .prop('vaultId', sStringId())\n    .description('The IDentifier of the vault.')\n    .prop('vaultAddress', sBCAddress())\n    .description('The blockchain address vault.')\n    .prop('block', sBlock())\n    .description('The block number.')\n    .required(\n      isPartial\n        ? []\n        : ['walletId', 'walletAddress', 'vaultId', 'vaultAddress', 'block']\n    )\n    .extend(sWalletBlockBody(isPartial))\n}\n\n/**\n * The updateable data of the block\n */\nexport interface WalletBlockBody {\n  // Balance of vault token\n  balance: iBigInt\n  // Balance of underlying token\n  tokenBalance: iBigInt\n  // Distributed rewards\n  distributedRewards?: WalletBlockDistributedRewards[]\n  cdoEpoch?: VaultWalletCdoEpochData\n  paretoDollar?: VaultWalletParetoDollarData\n}\n\nexport function sWalletBlockBody(isPartial?: boolean) {\n  return (\n    S.object()\n      .additionalProperties(false)\n      .prop('balance', sBigInt())\n      .description('The balance of the wallet in the vault.')\n      .prop('tokenBalance', sBigInt())\n      .description('The current token balance of the wallet.')\n      .prop(\n        'distributedRewards',\n        S.array().items(sWalletBlockDistributedRewards())\n      )\n      .description('List of distributed rewards for the wallet')\n      .prop('cdoEpoch', sVaultWalletCdoEpochData())\n      .prop('paretoDollar', sVaultWalletParetoDollarData())\n      // Deprecated\n      .prop('current', S.object().additionalProperties(true))\n      .prop('aggregated', S.object().additionalProperties(true))\n      .required(isPartial ? [] : ['balance', 'tokenBalance'])\n  )\n}\n\nexport interface WalletBlockDistributedRewards {\n  tokenId: string\n  tokenAddress: string\n  amount: string\n  amountUSD: string\n}\n\nexport function sWalletBlockDistributedRewards() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('tokenId', sStringId())\n    .required()\n    .prop('tokenAddress', sBCAddress())\n    .required()\n    .prop('amount', S.string())\n    .required()\n    .prop('amountUSD', S.string())\n    .required()\n}\n\nexport enum WalletBlockErrorCodes {\n  alreadyExists = 'WALLET_BLOCK_ALREADY_EXISTS',\n}\n\nexport enum WalletBlockRoutes {\n  v1Create = `v1/${WALLET_BLOCKS_ROUTES_KEY}`,\n  v1Delete = `v1/${WALLET_BLOCKS_ROUTES_KEY}/:walletBlockId`,\n  v1Read = `v1/${WALLET_BLOCKS_ROUTES_KEY}/:walletBlockId`,\n  v1Update = `v1/${WALLET_BLOCKS_ROUTES_KEY}/:walletBlockId`,\n  v1Search = `v1/${WALLET_BLOCKS_ROUTES_KEY}`,\n}\n\nexport type WalletBlockFields =\n  | '_id'\n  | 'walletId'\n  | 'walletAddress'\n  | 'vaultId'\n  | 'vaultAddress'\n  | 'block'\n  | 'balance'\n  | 'tokenBalance'\n\nexport const WALLET_BLOCK_FIELDS = [\n  '_id',\n  'walletId',\n  'walletAddress',\n  'vaultId',\n  'vaultAddress',\n  'block',\n  'balance',\n  'tokenBalance',\n]\n\nexport const WALLET_BLOCK_SORT_FIELDS = ['balance', 'timestamp']\n\nexport interface WalletBlocksSearchQuery\n  extends PageSearchQuery<'balance' | 'timestamp', WalletBlockFields> {\n  walletId?: string\n  walletAddress?: string\n  vaultId?: string | string[]\n  vaultAddress?: string\n  'balance:gt'?: string\n  'timestamp:gte'?: number\n  'timestamp:lte'?: number\n}\n\nexport function sWalletBlocksSearchQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('walletId', sStringId())\n    .description('The wallet IDentifier')\n    .prop('walletAddress', sBCAddress())\n    .description('The wallet blockchain address')\n    .prop('vaultId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('The vault IDentifier')\n    .prop('vaultAddress', sBCAddress())\n    .description('The vault blockchain address')\n    .prop('balance:gt', S.string())\n    .description('The wallet minimum balance')\n    .prop('timestamp:gte', S.number())\n    .description('Start timestamp of the wallet block.')\n    .prop('timestamp:lte', S.number())\n    .description('End timestamp of the wallet block.')\n    .extend(sPageSearchQuery(WALLET_BLOCK_FIELDS, WALLET_BLOCK_SORT_FIELDS))\n}\n"],"names":["S","sBCAddress","sBigInt","sBlock","sClientEntity","sPageSearchQuery","sStringId","WALLET_BLOCKS_ROUTES_KEY","sVaultWalletCdoEpochData","sVaultWalletParetoDollarData","sWalletBlock","isPartial","object","id","additionalProperties","extend","sWalletBlockData","prop","description","required","sWalletBlockBody","array","items","sWalletBlockDistributedRewards","string","WalletBlockErrorCodes","WalletBlockRoutes","WALLET_BLOCK_FIELDS","WALLET_BLOCK_SORT_FIELDS","sWalletBlocksSearchQuery","minItems","maxItems","number"],"mappings":"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"}