{"version":3,"sources":["../../../../../../../../libs/shared/data-access/src/lib/transactions/libs/transactions.lib.ts"],"sourcesContent":["import { Bytes, HexString, Transaction } from 'web3'\nimport { decodeAbiParameters } from '../../core'\n\n/**\n * Extract method signature from transaction input field\n * @param transaction web3 transaction\n * @returns transaction method signature\n */\nexport function getTransactionMethodSignature(\n  transaction: Transaction\n): Bytes | undefined {\n  const inputString = getTransactionInputData(transaction)\n  return String(inputString?.slice(0, 10))\n}\n\n/**\n * Extract input string from transaction considering SAFE\n * @param transaction web3 transaction\n * @returns transaction input hex string\n */\nexport function getTransactionInputString(\n  transaction: Transaction\n): HexString | undefined {\n  const inputString = getTransactionInputData(transaction)\n  return String(inputString?.slice(10))\n}\n\n/**\n * Check whether the transaction is from SAFE\n * @param transaction web3 transaction\n * @returns true | false\n */\nexport function isSafeTransaction(transaction: Transaction): boolean {\n  return transaction.input?.slice(0, 10) === '0x6a761202'\n}\n\n/**\n * Decode SAFE transaction input and get data\n * @param transaction web3 transaction\n * @returns SAFE transaction input hex string\n */\nexport function getTransactionInputData(\n  transaction: Transaction\n): HexString | undefined {\n  const isSafe = isSafeTransaction(transaction)\n  if (!isSafe) {\n    return String(transaction.input)\n  }\n  const hexString = transaction.input?.slice(10) as HexString\n  if (!hexString) {\n    return\n  }\n  const inputParams = decodeAbiParameters(\n    [\n      'address',\n      'uint256',\n      'bytes',\n      'uint8',\n      'uint256',\n      'uint256',\n      'uint256',\n      'address',\n      'address',\n      'bytes',\n    ],\n    hexString\n  )\n\n  return String(inputParams[2])\n}\n"],"names":["decodeAbiParameters","getTransactionMethodSignature","transaction","inputString","getTransactionInputData","String","slice","getTransactionInputString","isSafeTransaction","input","isSafe","hexString","inputParams"],"mappings":"AACA,SAASA,mBAAmB,QAAQ,aAAY;AAEhD;;;;CAIC,GACD,OAAO,SAASC,8BACdC,WAAwB;IAExB,MAAMC,cAAcC,wBAAwBF;IAC5C,OAAOG,OAAOF,+BAAAA,YAAaG,KAAK,CAAC,GAAG;AACtC;AAEA;;;;CAIC,GACD,OAAO,SAASC,0BACdL,WAAwB;IAExB,MAAMC,cAAcC,wBAAwBF;IAC5C,OAAOG,OAAOF,+BAAAA,YAAaG,KAAK,CAAC;AACnC;AAEA;;;;CAIC,GACD,OAAO,SAASE,kBAAkBN,WAAwB;QACjDA;IAAP,OAAOA,EAAAA,qBAAAA,YAAYO,KAAK,qBAAjBP,mBAAmBI,KAAK,CAAC,GAAG,SAAQ;AAC7C;AAEA;;;;CAIC,GACD,OAAO,SAASF,wBACdF,WAAwB;QAMNA;IAJlB,MAAMQ,SAASF,kBAAkBN;IACjC,IAAI,CAACQ,QAAQ;QACX,OAAOL,OAAOH,YAAYO,KAAK;IACjC;IACA,MAAME,aAAYT,qBAAAA,YAAYO,KAAK,qBAAjBP,mBAAmBI,KAAK,CAAC;IAC3C,IAAI,CAACK,WAAW;QACd;IACF;IACA,MAAMC,cAAcZ,oBAClB;QACE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD,EACDW;IAGF,OAAON,OAAOO,WAAW,CAAC,EAAE;AAC9B"}