{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/transactions/transaction.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport {\n  Block,\n  ClientEntity,\n  Page,\n  PageSearchQuery,\n  iBigInt,\n  sBCAddress,\n  sBCHash,\n  sBigInt,\n  sBlock,\n  sClientEntity,\n  sDateString,\n  sPageSearchQuery,\n  sStringId,\n} from '../core'\nimport { TRANSACTIONS_ROUTES_KEY } from './transaction.const'\nimport { uniq } from 'lodash'\n\n/**\n * Client Transaction interface\n */\nexport interface Transaction extends TransactionData, ClientEntity {}\n\nexport function sTransaction(isPartial?: boolean) {\n  return S.object()\n    .id('#transaction')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sTransactionData(isPartial))\n}\n\nexport interface TransactionData {\n  vaultId: string\n  vaultAddress: string\n  walletId: string\n  walletAddress: string\n  fromAddress?: string\n  toAddress?: string\n  tokenId: string\n  operatorId?: string\n  type: TransactionType\n  hash: string\n  block: Block\n  amount: iBigInt\n  tokenAmount: iBigInt\n  price: iBigInt\n  input?: string\n  transactionDate?: string\n}\n\nexport function sTransactionData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultId', sStringId())\n    .description('The vault IDentifier.')\n    .prop('vaultAddress', sBCAddress())\n    .description('The vault blockchain address.')\n    .prop('walletId', sStringId())\n    .description('The IDentifier of the wallet.')\n    .prop('walletAddress', sBCAddress())\n    .description('The wallet blockchain address.')\n    .prop('fromAddress', sBCAddress())\n    .description('The from blockchain address.')\n    .prop('toAddress', sBCAddress())\n    .description('The to blockchain address.')\n    .prop('tokenId', sStringId())\n    .description('The token IDentifier.')\n    .prop('operatorId', sStringId())\n    .description('The operator IDentifier.')\n    .prop('type', sTransactionType())\n    .description('The transaction type.')\n    .prop('hash', sBCHash())\n    .description('The transaction hash.')\n    .prop('block', sBlock())\n    .description('The transaction blockchain block.')\n    .prop('amount', sBigInt())\n    .description('The transaction amount.')\n    .prop('tokenAmount', sBigInt())\n    .description('The transaction token amount.')\n    .prop('price', sBigInt())\n    .description('The transaction vault price.')\n    .prop('input', S.string())\n    .description('The transaction input data.')\n    .prop('transactionDate', sDateString())\n    .description('The transaction date.')\n    .required(\n      isPartial\n        ? []\n        : [\n            'vaultId',\n            'vaultAddress',\n            'walletId',\n            'walletAddress',\n            'tokenId',\n            'type',\n            'hash',\n            'block',\n            'amount',\n            'tokenAmount',\n            'price',\n          ]\n    )\n}\n\n/**\n * #################################\n * ####### TRANSACTION TYPES #######\n * #################################\n */\n\nexport type TransactionTypeCommon =\n  | 'DEPOSIT'\n  | 'REDEEM'\n  | 'HARVEST'\n  | 'DISTRIBUTED_REWARDS'\n\nexport const TRANSACTION_TYPES_COMMON = [\n  'DEPOSIT',\n  'REDEEM',\n  'HARVEST',\n  'DISTRIBUTED_REWARDS',\n]\n\n/**\n * Vault Pareto Dollar\n */\n\nexport type TransactionTypeParetoDollar =\n  | 'ADD_COLLATERAL'\n  | 'ADD_YIELD_SOURCE'\n  | 'CLAIM_REDEEM_REQUEST'\n  | 'DEPOSIT_REWARDS'\n  | 'DEPOSIT_YIELD_SOURCE'\n  | 'MINT'\n  | 'NEW_EPOCH'\n  | 'REDEEM'\n  | 'REDEEM_YIELD_SOURCE'\n  | 'REMOVE_COLLATERAL'\n  | 'REMOVE_YIELD_SOURCE'\n  | 'REQUEST_REDEEM'\n  | 'STAKE'\n  | 'STAKE_POOL'\n  | 'TRANSFER'\n  | 'TRANSFER_POOL'\n  | 'UNSTAKE'\n  | 'UNSTAKE_POOL'\n\nexport const TRANSACTION_TYPES_PARETO_DOLLAR = [\n  'ADD_COLLATERAL',\n  'ADD_YIELD_SOURCE',\n  'CLAIM_REDEEM_REQUEST',\n  'DEPOSIT_REWARDS',\n  'DEPOSIT_YIELD_SOURCE',\n  'MINT',\n  'NEW_EPOCH',\n  'REDEEM',\n  'REDEEM_YIELD_SOURCE',\n  'REMOVE_COLLATERAL',\n  'REMOVE_YIELD_SOURCE',\n  'REQUEST_REDEEM',\n  'STAKE',\n  'STAKE_POOL',\n  'TRANSFER',\n  'TRANSFER_POOL',\n  'UNSTAKE',\n  'UNSTAKE_POOL',\n]\n\nexport function sTransactionTypeParetoDollar() {\n  return S.string().enum(TRANSACTION_TYPES_PARETO_DOLLAR)\n}\n\n/**\n * Vault CDO Epoch\n */\n\nexport const TRANSACTION_TYPES_CDO_EPOCH = [\n  'CLAIM_DEPOSIT_REQUEST',\n  'CLAIM_INSTANT_WITHDRAW',\n  'CLAIM_WITHDRAW',\n  'CLAIM_WITHDRAW_REQUEST',\n  'DELETE_DEPOSIT_REQUEST',\n  'DELETE_WITHDRAW_REQUEST',\n  'GET_INSTANT_WITHDRAWS',\n  'PROCESS_DEPOSIT_QUEUE',\n  'PROCESS_WITHDRAW_CLAIMS',\n  'PROCESS_WITHDRAW_QUEUE',\n  'REQUEST_DEPOSIT',\n  'REQUEST_WITHDRAW',\n  'START_EPOCH',\n  'STOP_EPOCH',\n]\n\nexport type TransactionTypeCdoEpoch =\n  | 'CLAIM_DEPOSIT_REQUEST'\n  | 'CLAIM_INSTANT_WITHDRAW'\n  | 'CLAIM_WITHDRAW'\n  | 'CLAIM_WITHDRAW_REQUEST'\n  | 'DELETE_DEPOSIT_REQUEST'\n  | 'DELETE_WITHDRAW_REQUEST'\n  | 'GET_INSTANT_WITHDRAWS'\n  | 'PROCESS_DEPOSIT_QUEUE'\n  | 'PROCESS_WITHDRAW_CLAIMS'\n  | 'PROCESS_WITHDRAW_QUEUE'\n  | 'REQUEST_DEPOSIT'\n  | 'REQUEST_WITHDRAW'\n  | 'START_EPOCH'\n  | 'STOP_EPOCH'\n\nexport function sTransactionTypeCdoEpoch() {\n  return S.string().enum(TRANSACTION_TYPES_CDO_EPOCH)\n}\n\nexport type TransactionType =\n  | TransactionTypeCommon\n  | TransactionTypeParetoDollar\n  | TransactionTypeCdoEpoch\n\nexport const TRANSACTION_TYPES = [\n  ...TRANSACTION_TYPES_COMMON,\n  ...TRANSACTION_TYPES_PARETO_DOLLAR,\n  ...TRANSACTION_TYPES_CDO_EPOCH,\n]\n\nexport function sTransactionType() {\n  return S.string().enum(uniq(TRANSACTION_TYPES))\n}\n\n/**\n * #####################################\n * ####### END TRANSACTION TYPES #######\n * #####################################\n */\n\nexport type TransactionFields =\n  | '_id'\n  | 'vaultId'\n  | 'vaultAddress'\n  | 'walletId'\n  | 'walletAddress'\n  | 'tokenId'\n  | 'type'\n  | 'hash'\n  | 'block'\n  | 'amount'\n  | 'tokenAmount'\n  | 'price'\n  | 'input'\n  | 'createdAt'\n  | 'createdBy'\n  | 'updatedAt'\n  | 'updatedBy'\n\nexport const TRANSACTION_FIELDS = [\n  '_id',\n  'vaultId',\n  'vaultAddress',\n  'walletId',\n  'walletAddress',\n  'tokenId',\n  'type',\n  'hash',\n  'block',\n  'amount',\n  'tokenAmount',\n  'price',\n  'input',\n  'createdAt',\n  'createdBy',\n  'updatedAt',\n  'updatedBy',\n]\n\nexport const TRANSACTION_SORT_FIELDS = ['_id', 'block', 'timestamp']\n\nexport type TransactionsSideData =\n  | 'wallet'\n  | 'user'\n  | 'token'\n  | 'vault'\n  | 'operator'\n\nexport interface TransactionsSearchQuery\n  extends PageSearchQuery<'block' | 'timestamp', TransactionFields> {\n  vaultId?: string | string[]\n  vaultAddress?: string | string[]\n  walletId?: string | string[]\n  walletAddress?: string | string[]\n  block?: string\n  tokenId?: string\n  type?: TransactionType | TransactionType[]\n  'timestamp:gte'?: number\n  'timestamp:lte'?: number\n}\n\n// Route schema\nexport function sTransactionsSearchQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('The vault IDentifier of the transaction.')\n    .prop(\n      'vaultAddress',\n      S.array().minItems(1).maxItems(200).items(sBCAddress())\n    )\n    .description('The vualt address of the transaction.')\n    .prop('walletId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('The wallet IDentifier of the transaction.')\n    .prop(\n      'walletAddress',\n      S.array().minItems(1).maxItems(200).items(sBCAddress())\n    )\n    .description('The wallet address of the transaction.')\n    .prop('tokentId', sStringId())\n    .description('The token IDentifier of the transaction.')\n    .prop('type', S.array().minItems(1).maxItems(200).items(sTransactionType()))\n    .description('The type of the transaction.')\n    .prop('block', S.string())\n    .description('The block of the transaction.')\n    .prop('timestamp:gte', S.number())\n    .description('Start timestamp of the transaction.')\n    .prop('timestamp:lte', S.number())\n    .description('End timestamp of the transaction.')\n    .extend(sPageSearchQuery(TRANSACTION_FIELDS, TRANSACTION_SORT_FIELDS))\n}\n\nexport enum TransactionRoutes {\n  v1Create = `v1/${TRANSACTIONS_ROUTES_KEY}`,\n  v1Delete = `v1/${TRANSACTIONS_ROUTES_KEY}/:tokenId`,\n  v1Read = `v1/${TRANSACTIONS_ROUTES_KEY}/:tokenId`,\n  v1Update = `v1/${TRANSACTIONS_ROUTES_KEY}/:tokenId`,\n  v1Search = `v1/${TRANSACTIONS_ROUTES_KEY}`,\n}\n\nexport interface TransactionsClientModel {\n  search: (params?: TransactionsSearchQuery) => Promise<Page<Transaction>>\n  list: (params?: TransactionsSearchQuery) => Promise<Transaction[]>\n  findOne: (\n    params?: TransactionsSearchQuery\n  ) => Promise<Transaction | undefined>\n  create: (body: TransactionData) => Promise<Transaction>\n}\n"],"names":["S","sBCAddress","sBCHash","sBigInt","sBlock","sClientEntity","sDateString","sPageSearchQuery","sStringId","TRANSACTIONS_ROUTES_KEY","uniq","sTransaction","isPartial","object","id","additionalProperties","extend","sTransactionData","prop","description","sTransactionType","string","required","TRANSACTION_TYPES_COMMON","TRANSACTION_TYPES_PARETO_DOLLAR","sTransactionTypeParetoDollar","enum","TRANSACTION_TYPES_CDO_EPOCH","sTransactionTypeCdoEpoch","TRANSACTION_TYPES","TRANSACTION_FIELDS","TRANSACTION_SORT_FIELDS","sTransactionsSearchQuery","array","minItems","maxItems","items","number","TransactionRoutes"],"mappings":"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"}