{"version":3,"sources":["../../../../../../../../libs/shared/data-access/src/lib/vault-latest-blocks/libs/vault-latest-blocks-client.lib.ts"],"sourcesContent":["import { Axios } from 'axios'\nimport {\n  VaultLatestBlockRoutes,\n  VaultLatestBlocksClient,\n} from '../vault-latest-block.model'\nimport { uriFy } from '../../core'\nimport { VaultBlocksSearchQuery } from '../../vault-blocks'\n\n/**\n * Create vault latest blocks client\n * @param axios - The Axios instance\n * @returns the vault latest blocks GOT client\n */\nexport function createVaultLatestBlocksClient(\n  axios: Axios\n): VaultLatestBlocksClient {\n  return {\n    search: (searchParams?: VaultBlocksSearchQuery) =>\n      axios\n        .request({\n          url: VaultLatestBlockRoutes.v1Search,\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => response.data),\n    list: (searchParams?: VaultBlocksSearchQuery) =>\n      axios\n        .request({\n          url: VaultLatestBlockRoutes.v1Search,\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => {\n          const page = response.data\n          return page.data\n        }),\n    readOne: (searchParams: VaultBlocksSearchQuery) =>\n      axios\n        .request({\n          url: VaultLatestBlockRoutes.v1Search,\n          method: 'GET',\n          params: new URLSearchParams(uriFy(searchParams)),\n        })\n        .then((response) => {\n          const { data } = response.data\n\n          if (!data.length) {\n            throw Error('Not found')\n          }\n\n          return data[0]\n        }),\n  }\n}\n"],"names":["VaultLatestBlockRoutes","uriFy","createVaultLatestBlocksClient","axios","search","searchParams","request","url","v1Search","method","params","URLSearchParams","undefined","then","response","data","list","page","readOne","length","Error"],"mappings":"AACA,SACEA,sBAAsB,QAEjB,8BAA6B;AACpC,SAASC,KAAK,QAAQ,aAAY;AAGlC;;;;CAIC,GACD,OAAO,SAASC,8BACdC,KAAY;IAEZ,OAAO;QACLC,QAAQ,CAACC,eACPF,MACGG,OAAO,CAAC;gBACPC,KAAKP,uBAAuBQ,QAAQ;gBACpCC,QAAQ;gBACRC,QAAQL,eACJ,IAAIM,gBAAgBV,MAAMI,iBAC1BO;YACN,GACCC,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;QACrCC,MAAM,CAACX,eACLF,MACGG,OAAO,CAAC;gBACPC,KAAKP,uBAAuBQ,QAAQ;gBACpCC,QAAQ;gBACRC,QAAQL,eACJ,IAAIM,gBAAgBV,MAAMI,iBAC1BO;YACN,GACCC,IAAI,CAAC,CAACC;gBACL,MAAMG,OAAOH,SAASC,IAAI;gBAC1B,OAAOE,KAAKF,IAAI;YAClB;QACJG,SAAS,CAACb,eACRF,MACGG,OAAO,CAAC;gBACPC,KAAKP,uBAAuBQ,QAAQ;gBACpCC,QAAQ;gBACRC,QAAQ,IAAIC,gBAAgBV,MAAMI;YACpC,GACCQ,IAAI,CAAC,CAACC;gBACL,MAAM,EAAEC,IAAI,EAAE,GAAGD,SAASC,IAAI;gBAE9B,IAAI,CAACA,KAAKI,MAAM,EAAE;oBAChB,MAAMC,MAAM;gBACd;gBAEA,OAAOL,IAAI,CAAC,EAAE;YAChB;IACN;AACF"}