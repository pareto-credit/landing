{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/vault-epochs/vault-epoch.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport {\n  Block,\n  ClientEntity,\n  iBigInt,\n  Page,\n  PageSearchQuery,\n  sBCAddress,\n  sBigInt,\n  sBlock,\n  sClientEntity,\n  sDateString,\n  sPageSearchQuery,\n  sStringId,\n  UnitTime,\n} from '../core'\nimport { sVaultTvl, VaultTvl } from '../vault-blocks'\nimport { VAULT_EPOCHS_ROUTES_KEY } from './vault-epoch.const'\n\nexport interface VaultEpoch extends VaultEpochData, ClientEntity {}\n\nexport function sVaultEpoch(isPartial?: boolean) {\n  return S.object()\n    .id('#vaultEpoch')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sVaultEpochData(isPartial))\n}\n\nexport interface VaultEpochData extends VaultEpochBody {\n  vaultId: string\n  vaultAddress: string\n}\n\nexport function sVaultEpochData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultId', sStringId())\n    .prop('vaultAddress', sBCAddress())\n    .prop('block', sBlock())\n    .required(isPartial ? [] : ['vaultId', 'vaultAddress', 'block'])\n    .extend(sVaultEpochBody(isPartial))\n}\nexport interface VaultEpochBody {\n  block: Block\n\n  APRs: VaultEpochAPRs\n  APYs?: VaultEpochAPYs\n  TVL: VaultTvl\n  creditExtended: VaultCreditExtended\n  totalSupply: iBigInt\n  price: iBigInt\n\n  deposits: iBigInt\n  duration: number\n  bufferDuration: number\n  unclaimedFees: iBigInt\n\n  // NET INTEREST JESUS CHRIST!!!\n  expectedInterest: iBigInt\n\n  startDate?: string\n  endDate?: string\n\n  count: number\n  status: VaultEpochStatus\n\n  withdrawType: VaultEpochWithdrawType\n\n  depositQueue?: VaultEpochQueue\n  withdrawQueue?: VaultEpochQueue\n\n  withdraws?: VaultEpochWithdraws\n  instantWithdraws?: VaultEpochInstantWithdraws\n}\n\nexport function sVaultEpochBody(isPartial?: boolean) {\n  return S.object()\n    .prop('APRs', sVaultEpochAPRs())\n    .prop('APYs', sVaultEpochAPYs())\n    .prop('totalSupply', sBigInt())\n    .prop('price', sBigInt())\n    .prop('TVL', sVaultTvl())\n    .prop('creditExtended', sVaultCreditExtended())\n    .prop('expectedInterest', sBigInt())\n    .prop('unclaimedFees', sBigInt())\n    .prop('deposits', sBigInt())\n    .prop('duration', S.number())\n    .prop('status', sVaultEpochStatus())\n    .prop('withdrawType', sVaultEpochWithdrawType())\n    .prop('count', S.number())\n    .prop('bufferDuration', S.number())\n    .prop('startDate', S.string())\n    .prop('endDate', S.string())\n    .prop('withdraws', sVaultEpochWithdraws())\n    .prop('depositQueue', sVaultEpochQueue())\n    .prop('withdrawQueue', sVaultEpochQueue())\n    .prop('instantWithdraws', sVaultEpochInstantWithdraws())\n    .required(\n      isPartial\n        ? []\n        : [\n            'APRs',\n            'totalSupply',\n            'price',\n            'TVL',\n            'expectedInterest',\n            'unclaimedFees',\n            'deposits',\n            'duration',\n            'status',\n            'withdrawType',\n            'count',\n            'bufferDuration',\n          ]\n    )\n}\n\nexport interface VaultCreditExtended {\n  token: iBigInt\n  USD: iBigInt\n}\n\nexport function sVaultCreditExtended() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('token', sBigInt())\n    .required()\n    .prop('USD', sBigInt())\n    .required()\n}\n\nexport type VaultEpochWithdrawType = 'INSTANT' | 'STANDARD'\n\nexport function sVaultEpochWithdrawType() {\n  return S.string().enum(['INSTANT', 'STANDARD'])\n}\n\nexport interface VaultEpochAPYs {\n  // Gross APY\n  GROSS: number\n  // Net APY\n  NET: number\n  // Performance Fee\n  FEE: number\n}\n\nexport function sVaultEpochAPYs() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('GROSS', S.number())\n    .required()\n    .prop('NET', S.number())\n    .required()\n    .prop('FEE', S.number())\n    .required()\n}\n\nexport interface VaultEpochAPRs {\n  // Epoch GROSS interest rate\n  EPOCH: number\n  // Buffer GROSS interest rate\n  BUFFER: number\n  // Cure GROSS interest rate\n  CURE?: number\n  // Gross interest rate (EPOCH + BUFFER + CURE)\n  GROSS: number\n  // Net Interest rate (GROSS - fee)\n  NET: number\n  // Difference between previous gross APR and the current one\n  DELTA: number\n}\n\nexport function sVaultEpochAPRs() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('EPOCH', S.number())\n    .required()\n    .prop('BUFFER', S.number())\n    .required()\n    .prop('CURE', S.number())\n    .prop('GROSS', S.number())\n    .required()\n    .prop('NET', S.number())\n    .required()\n    .prop('DELTA', S.number())\n    .required()\n}\n\n// Epoch durations in seconds\nexport interface VaultEpochDurations {\n  EPOCH: number\n  BUFFER: number\n  CURE: number\n  TOTAL: number\n}\n\nexport interface VaultEpochAmounts {\n  tvl: number | string\n  netInterest: number | string\n  grossInterest?: number | string\n  totalAPR?: number\n  epochBufferAPR?: number\n  lastAPR?: number\n}\n\nexport interface VaultEpochTimings {\n  startDate: string | Date\n  epochDuration: number\n  bufferDuration: number\n  lastEndDate?: string | Date\n}\n\nexport type VaultEpochStatus =\n  | 'WAITING'\n  | 'RUNNING'\n  | 'DEFAULTED'\n  | 'FINISHED'\n  | 'CURE'\n\nexport function sVaultEpochStatus() {\n  return S.string().enum([\n    'WAITING',\n    'RUNNING',\n    'DEFAULTED',\n    'FINISHED',\n    'CURE',\n  ])\n}\n\nexport interface VaultEpochQueue {\n  status: VaultEpochQueueStatus\n  amount: iBigInt\n}\n\nexport function sVaultEpochQueue() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('amount', sBigInt())\n    .required()\n    .prop('status', sVaultEpochQueueStatus())\n    .required()\n}\n\nexport type VaultEpochQueueStatus = 'PENDING' | 'PROCESSED'\n\nexport function sVaultEpochQueueStatus() {\n  return S.string().enum(['PENDING', 'PROCESSED'])\n}\n\nexport interface VaultEpochWithdraws {\n  amount: iBigInt\n  fees: iBigInt\n}\n\nexport function sVaultEpochWithdraws() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('amount', sBigInt())\n    .required()\n    .prop('fees', sBigInt())\n    .required()\n}\n\nexport interface VaultEpochInstantWithdraws {\n  amount: iBigInt\n  delay: number\n  aprDelta: number\n  allowed: boolean\n  deadline?: string\n}\n\nexport function sVaultEpochInstantWithdraws() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('amount', sBigInt())\n    .required()\n    .prop('delay', S.number())\n    .required()\n    .prop('aprDelta', S.number())\n    .required()\n    .prop('allowed', S.boolean())\n    .required()\n    .prop('deadline', S.string())\n}\n\nexport interface VaultEpochWithdrawsCheck {\n  balance: boolean\n  allowance: boolean\n}\n\nexport interface VaultEpochProgression {\n  endDate: string\n  startDate: string\n  progress: number\n}\n\nexport type VaultEpochFields =\n  | '_id'\n  | 'block'\n  | 'APRs'\n  | 'TVL'\n  | 'totalSupply'\n  | 'price'\n  | 'deposits'\n  | 'duration'\n  | 'bufferDuration'\n  | 'unclaimedFees'\n  | 'expectedInterest'\n  | 'startDate'\n  | 'endDate'\n  | 'count'\n  | 'status'\n  | 'withdrawType'\n  | 'depositQueue'\n  | 'withdrawQueue'\n  | 'withdraws'\n  | 'instantWithdraws'\n  | 'createdAt'\n  | 'createdBy'\n  | 'updatedAt'\n  | 'updatedBy'\n\nexport const VAULT_EPOCH_FIELDS = [\n  '_id',\n  'block',\n  'APRs',\n  'TVL',\n  'totalSupply',\n  'price',\n  'deposits',\n  'duration',\n  'bufferDuration',\n  'unclaimedFees',\n  'expectedInterest',\n  'startDate',\n  'endDate',\n  'count',\n  'status',\n  'withdrawType',\n  'depositQueue',\n  'withdrawQueue',\n  'withdraws',\n  'instantWithdraws',\n  'createdAt',\n  'createdBy',\n  'updatedAt',\n  'updatedBy',\n]\n\nexport const VAULT_EPOCH_SORT_FIELDS = ['_id', 'count', 'timestamp']\n\nexport interface VaultEpochsSearchQuery\n  extends PageSearchQuery<'count' | 'timestamp'> {\n  vaultId?: string | string[]\n  vaultAddress?: string | string[]\n  status?: VaultEpochStatus\n  count?: number\n  'count:lt'?: number\n  'count:lte'?: number\n  'count:gt'?: number\n  'count:gte'?: number\n  'timestamp:gte'?: number\n  'timestamp:lte'?: number\n  startDate?: string\n  'startDate:lt'?: string\n  'startDate:lte'?: string\n  'startDate:gt'?: string\n  'startDate:gte'?: string\n  endDate?: string\n  'endDate:lt'?: string\n  'endDate:lte'?: string\n  'endDate:gt'?: string\n  'endDate:gte'?: string\n}\n\nexport function sVaultEpochsSearchQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('The vault IDentifier')\n    .prop(\n      'vaultAddress',\n      S.array().minItems(1).maxItems(200).items(sBCAddress())\n    )\n    .description('The vault blockchain address')\n    .prop('count', S.number())\n    .description('The epoch number that must match')\n    .prop('count:lt', S.number())\n    .description('The epoch number less then')\n    .prop('count:lte', S.number())\n    .description('The epoch number less or equal than')\n    .prop('count:gt', S.number())\n    .description('The epoch number greater than')\n    .prop('count:gte', S.number())\n    .description('The epoch number greater or equal than')\n    .prop('timestamp:gte', S.number())\n    .description('The epoch block timestamp greater or equal than')\n    .prop('timestamp:lte', S.number())\n    .description('The epoch block timestamp less or equal than')\n    .prop('startDate', sDateString())\n    .description('The epoch start date equal than')\n    .prop('startDate:lt', sDateString())\n    .description('The epoch start date less than')\n    .prop('startDate:lte', sDateString())\n    .description('The epoch start date less or equal than')\n    .prop('startDate:gt', sDateString())\n    .description('The epoch start date greater than')\n    .prop('startDate:gte', sDateString())\n    .description('The epoch start date greater or equal than')\n    .prop('endDate', sDateString())\n    .description('The epoch end date equal than')\n    .prop('endDate:lt', sDateString())\n    .description('The epoch start date equal than')\n    .prop('endDate:lte', sDateString())\n    .description('The epoch start date equal than')\n    .prop('endDate:gt', sDateString())\n    .description('The epoch start date equal than')\n    .prop('endDate:gte', sDateString())\n    .description('The epoch start date equal than')\n    .prop('status', sVaultEpochStatus())\n    .description('The status that must match')\n    .extend(sPageSearchQuery(VAULT_EPOCH_FIELDS, VAULT_EPOCH_SORT_FIELDS))\n}\n\nexport interface VaultEpochsClientModel {\n  create: (body: VaultEpochData) => Promise<VaultEpoch>\n  search: (params?: VaultEpochsSearchQuery) => Promise<Page<VaultEpoch>>\n  searchAll: (params?: VaultEpochsSearchQuery) => Promise<Page<VaultEpoch>>\n  list: (params?: VaultEpochsSearchQuery) => Promise<VaultEpoch[]>\n  listAll: (params?: VaultEpochsSearchQuery) => Promise<VaultEpoch[]>\n  findOne: (params?: VaultEpochsSearchQuery) => Promise<VaultEpoch | undefined>\n}\n\nexport enum VaultEpochRoutes {\n  v1Create = `v1/${VAULT_EPOCHS_ROUTES_KEY}`,\n  v1Delete = `v1/${VAULT_EPOCHS_ROUTES_KEY}/:vaultEpochId`,\n  v1Read = `v1/${VAULT_EPOCHS_ROUTES_KEY}/:vaultEpochId`,\n  v1Update = `v1/${VAULT_EPOCHS_ROUTES_KEY}/:vaultEpochId`,\n  v1Search = `v1/${VAULT_EPOCHS_ROUTES_KEY}`,\n}\n\nexport interface VaultCdoEpochData {\n  epoch: VaultEpoch\n  lastEpoch?: VaultEpoch\n  withdrawAmount: string\n  withdrawDeadline: Date\n  instantWithdrawed?: boolean\n  interests: string\n  duration: number\n  durationSeconds: number\n  feePercentage: number\n  unit: UnitTime\n  APRs: VaultEpochAPRs\n  lastAPRs?: VaultEpochAPRs\n  toWithdraw: string\n  isDefaultable: boolean\n}\n"],"names":["S","sBCAddress","sBigInt","sBlock","sClientEntity","sDateString","sPageSearchQuery","sStringId","sVaultTvl","VAULT_EPOCHS_ROUTES_KEY","sVaultEpoch","isPartial","object","id","additionalProperties","extend","sVaultEpochData","prop","required","sVaultEpochBody","sVaultEpochAPRs","sVaultEpochAPYs","sVaultCreditExtended","number","sVaultEpochStatus","sVaultEpochWithdrawType","string","sVaultEpochWithdraws","sVaultEpochQueue","sVaultEpochInstantWithdraws","enum","sVaultEpochQueueStatus","boolean","VAULT_EPOCH_FIELDS","VAULT_EPOCH_SORT_FIELDS","sVaultEpochsSearchQuery","array","minItems","maxItems","items","description","VaultEpochRoutes"],"mappings":"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"}