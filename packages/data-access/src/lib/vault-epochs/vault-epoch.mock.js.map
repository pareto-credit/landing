{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/vault-epochs/vault-epoch.mock.ts"],"sourcesContent":["import { BlockMock, DeepPartial } from '../core'\nimport { VaultTvlMock } from '../vault-blocks'\nimport { WEB3_DEFAULT_ADDR } from '../web3-client'\nimport {\n  VaultEpoch,\n  VaultEpochAPRs,\n  VaultEpochQueue,\n  VaultEpochInstantWithdraws,\n  VaultEpochWithdraws,\n  VaultCdoEpochData,\n  VaultEpochAPYs,\n  VaultCreditExtended,\n} from './vault-epoch.model'\n\n/**\n * Vault Epoch Mock\n */\nexport function VaultEpochMock(options?: DeepPartial<VaultEpoch>): VaultEpoch {\n  const now = new Date().toISOString()\n\n  return {\n    _id: options?._id || 'VAULT_EPOCH_ID',\n\n    block: BlockMock(options?.block),\n    vaultId: options?.vaultId || 'VAULT_ID',\n    vaultAddress: options?.vaultAddress || WEB3_DEFAULT_ADDR,\n\n    APRs: VaultEpochAPRsMock(options?.APRs),\n    APYs: VaultEpochAPYsMock(options?.APYs),\n\n    totalSupply: options?.totalSupply || '0',\n    price: options?.price || '0',\n    TVL: VaultTvlMock(options?.TVL),\n    creditExtended: VaultCreditExtendedMock(options?.creditExtended),\n\n    expectedInterest: options?.expectedInterest || '0',\n    deposits: options?.deposits || '0',\n    duration: options?.duration || 0,\n    bufferDuration: options?.bufferDuration || 0,\n    unclaimedFees: options?.unclaimedFees || '0',\n\n    startDate: options?.startDate,\n    endDate: options?.endDate,\n    count: options?.count || 0,\n    status: options?.status || 'WAITING',\n    depositQueue: VaultCdoEpochDepositQueueMock(options?.depositQueue),\n\n    withdrawType: options?.withdrawType || 'STANDARD',\n\n    withdraws: options?.withdraws\n      ? VaultEpochWithdrawsMock(options.withdraws)\n      : undefined,\n    instantWithdraws: options?.instantWithdraws\n      ? VaultEpochInstantWithdrawsMock(options.instantWithdraws)\n      : undefined,\n\n    createdAt: options?.createdAt || now,\n    createdBy: options?.createdBy || 'USER_ID',\n    updatedAt: options?.updatedAt || now,\n    updatedBy: options?.updatedBy || 'USER_ID',\n  }\n}\n\nexport function VaultCreditExtendedMock(\n  options?: Partial<VaultCreditExtended>\n): VaultCreditExtended {\n  return {\n    token: options?.token || '0',\n    USD: options?.USD || '0',\n  }\n}\n\nexport function VaultCdoEpochDepositQueueMock(\n  options?: Partial<VaultEpochQueue>\n): VaultEpochQueue {\n  return {\n    status: options?.status || 'PENDING',\n    amount: options?.amount || '0',\n  }\n}\n\nexport function VaultEpochAPRsMock(\n  options?: Partial<VaultEpochAPRs>\n): VaultEpochAPRs {\n  return {\n    NET: options?.NET || 0,\n    DELTA: options?.DELTA || 0,\n    GROSS: options?.GROSS || 0,\n    EPOCH: options?.EPOCH || 0,\n    BUFFER: options?.BUFFER || 0,\n    CURE: options?.CURE || 0,\n  }\n}\n\nexport function VaultEpochAPYsMock(\n  options?: Partial<VaultEpochAPYs>\n): VaultEpochAPYs {\n  return {\n    NET: options?.NET || 0,\n    GROSS: options?.GROSS || 0,\n    FEE: options?.FEE || 0,\n  }\n}\n\nexport function VaultEpochWithdrawsMock(\n  options?: Partial<VaultEpochWithdraws>\n): VaultEpochWithdraws {\n  return {\n    amount: options?.amount || '0',\n    fees: options?.fees || '0',\n  }\n}\n\nexport function VaultEpochInstantWithdrawsMock(\n  options?: Partial<VaultEpochInstantWithdraws>\n): VaultEpochInstantWithdraws {\n  return {\n    amount: options?.amount || '0',\n    delay: options?.delay || 0,\n    aprDelta: options?.aprDelta || 0,\n    allowed: options?.allowed ?? true,\n    deadline: options?.deadline,\n  }\n}\n\nexport function VaultCdoEpochDataMock(\n  options?: Partial<VaultCdoEpochData>\n): VaultCdoEpochData {\n  return {\n    epoch: VaultEpochMock(options?.epoch),\n    lastEpoch: VaultEpochMock(options?.lastEpoch),\n    withdrawAmount: options?.withdrawAmount || '0',\n    withdrawDeadline: options?.withdrawDeadline || new Date(),\n    instantWithdrawed: !!options?.instantWithdrawed,\n    interests: options?.interests || '0',\n    duration: options?.duration || 0,\n    durationSeconds: options?.durationSeconds || 0,\n    unit: options?.unit || 'seconds',\n    APRs: VaultEpochAPRsMock(options?.APRs),\n    feePercentage: options?.feePercentage || 0,\n    toWithdraw: options?.toWithdraw || '0',\n    isDefaultable: !!options?.isDefaultable,\n  }\n}\n"],"names":["BlockMock","VaultTvlMock","WEB3_DEFAULT_ADDR","VaultEpochMock","options","now","Date","toISOString","_id","block","vaultId","vaultAddress","APRs","VaultEpochAPRsMock","APYs","VaultEpochAPYsMock","totalSupply","price","TVL","creditExtended","VaultCreditExtendedMock","expectedInterest","deposits","duration","bufferDuration","unclaimedFees","startDate","endDate","count","status","depositQueue","VaultCdoEpochDepositQueueMock","withdrawType","withdraws","VaultEpochWithdrawsMock","undefined","instantWithdraws","VaultEpochInstantWithdrawsMock","createdAt","createdBy","updatedAt","updatedBy","token","USD","amount","NET","DELTA","GROSS","EPOCH","BUFFER","CURE","FEE","fees","delay","aprDelta","allowed","deadline","VaultCdoEpochDataMock","epoch","lastEpoch","withdrawAmount","withdrawDeadline","instantWithdrawed","interests","durationSeconds","unit","feePercentage","toWithdraw","isDefaultable"],"mappings":"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"}