{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/vault-categories/vault-category.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\nimport {\n  ClientEntity,\n  Locales,\n  Page,\n  PageSearchQuery,\n  sClientEntity,\n  sLocales,\n  sPageSearchQuery,\n} from '../core'\nimport { VAULT_CATEGORIES_ROUTES_KEY } from './vault-category.const'\n\n/**\n * Client Vault interace\n */\nexport interface VaultCategory extends VaultCategoryData, ClientEntity {}\n\nexport function sVaultCategory(isPartial?: boolean) {\n  return S.object()\n    .id('#vaultCategory')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sVaultCategoryData(isPartial))\n}\n\nexport interface VaultCategoryData {\n  code: string\n  name: Locales<string>\n  description?: Locales<string>\n}\n\nexport function sVaultCategoryData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('code', S.string())\n    .prop('name', sLocales())\n    .prop('description', sLocales())\n    .required(isPartial ? [] : ['code', 'name'])\n}\n\nexport enum VaultCategoryErrorCodes {\n  collision = 'VAULT_CATEGORY_COLLISION',\n  notFound = 'VAULT_CATEGORY_NOT_FOUND',\n  notDeletable = 'VAULT_CATEGORY_NOT_DELETABLE',\n  alreadyExists = 'VAULT_CATEGORY_ALREADY_EXISTS',\n}\n\nexport type VaultCategoryFields =\n  | '_id'\n  | 'code'\n  | 'name'\n  | 'description'\n  | 'createdAt'\n  | 'createdBy'\n  | 'updatedAt'\n  | 'updatedBy'\n\nexport const VAULT_CATEGORY_FIELDS = [\n  '_id',\n  'code',\n  'name',\n  'description',\n  'createdAt',\n  'createdBy',\n  'updatedAt',\n  'updatedBy',\n]\n\nexport const VAULT_CATEGORY_SORT_FIELDS = ['_id', 'code']\n\nexport interface VaultCategoriesSearchQuery\n  extends PageSearchQuery<'code', VaultCategoryFields> {\n  code?: string\n  'code:ct'?: string\n}\n\nexport function sVaultCategoriesSearchSchema() {\n  return S.object()\n    .additionalProperties(false)\n    .description('List of vault type IDs.')\n    .prop('code', S.string())\n    .description('Code of the vault type that must match.')\n    .prop('code:ct', S.string())\n    .description('Code of the vault type that must be contained.')\n    .extend(sPageSearchQuery(VAULT_CATEGORY_FIELDS, VAULT_CATEGORY_SORT_FIELDS))\n}\n\nexport interface VaultCategoriesClient {\n  search: (params?: VaultCategoriesSearchQuery) => Promise<Page<VaultCategory>>\n  list: (params?: VaultCategoriesSearchQuery) => Promise<VaultCategory[]>\n  findOne: (\n    params?: VaultCategoriesSearchQuery\n  ) => Promise<VaultCategory | undefined>\n  create: (body: VaultCategoryData) => Promise<VaultCategory>\n}\n\nexport enum VaultCategoryRoutes {\n  v1Create = `v1/${VAULT_CATEGORIES_ROUTES_KEY}`,\n  v1Delete = `v1/${VAULT_CATEGORIES_ROUTES_KEY}/:typeId`,\n  v1Read = `v1/${VAULT_CATEGORIES_ROUTES_KEY}/:typeId`,\n  v1Update = `v1/${VAULT_CATEGORIES_ROUTES_KEY}/:typeId`,\n  v1Search = `v1/${VAULT_CATEGORIES_ROUTES_KEY}`,\n}\n"],"names":["S","sClientEntity","sLocales","sPageSearchQuery","VAULT_CATEGORIES_ROUTES_KEY","sVaultCategory","isPartial","object","id","additionalProperties","extend","sVaultCategoryData","prop","string","required","VaultCategoryErrorCodes","VAULT_CATEGORY_FIELDS","VAULT_CATEGORY_SORT_FIELDS","sVaultCategoriesSearchSchema","description","VaultCategoryRoutes"],"mappings":"AAAA,OAAOA,OAAO,qBAAoB;AAClC,SAKEC,aAAa,EACbC,QAAQ,EACRC,gBAAgB,QACX,UAAS;AAChB,SAASC,2BAA2B,QAAQ,yBAAwB;AAOpE,OAAO,SAASC,eAAeC,SAAmB;IAChD,OAAON,EAAEO,MAAM,GACZC,EAAE,CAAC,kBACHC,oBAAoB,CAAC,OACrBC,MAAM,CAACT,cAAcK,YACrBI,MAAM,CAACC,mBAAmBL;AAC/B;AAQA,OAAO,SAASK,mBAAmBL,SAAmB;IACpD,OAAON,EAAEO,MAAM,GACZE,oBAAoB,CAAC,OACrBG,IAAI,CAAC,QAAQZ,EAAEa,MAAM,IACrBD,IAAI,CAAC,QAAQV,YACbU,IAAI,CAAC,eAAeV,YACpBY,QAAQ,CAACR,YAAY,EAAE,GAAG;QAAC;QAAQ;KAAO;AAC/C;;UAEYS;;;;;GAAAA,4BAAAA;AAiBZ,OAAO,MAAMC,wBAAwB;IACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD,CAAA;AAED,OAAO,MAAMC,6BAA6B;IAAC;IAAO;CAAO,CAAA;AAQzD,OAAO,SAASC;IACd,OAAOlB,EAAEO,MAAM,GACZE,oBAAoB,CAAC,OACrBU,WAAW,CAAC,2BACZP,IAAI,CAAC,QAAQZ,EAAEa,MAAM,IACrBM,WAAW,CAAC,2CACZP,IAAI,CAAC,WAAWZ,EAAEa,MAAM,IACxBM,WAAW,CAAC,kDACZT,MAAM,CAACP,iBAAiBa,uBAAuBC;AACpD;;UAWYG;0DACC,CAAC,GAAG,EAAEhB,4BAA4B,CAAC;0DACnC,CAAC,GAAG,EAAEA,4BAA4B,QAAQ,CAAC;wDAC7C,CAAC,GAAG,EAAEA,4BAA4B,QAAQ,CAAC;0DACzC,CAAC,GAAG,EAAEA,4BAA4B,QAAQ,CAAC;0DAC3C,CAAC,GAAG,EAAEA,4BAA4B,CAAC;GALpCgB,wBAAAA"}