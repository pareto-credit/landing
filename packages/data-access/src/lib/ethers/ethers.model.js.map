{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/ethers/ethers.model.ts"],"sourcesContent":["import { Contract, EventFilter, providers } from 'ethers'\nimport { TransactionType } from '../transactions'\n\nexport interface EthersRPC {\n  chain: {\n    _id: string\n    name: string\n    chainID: number\n  }\n  provider: providers.Provider\n}\n\nexport interface EthersApiKeys {\n  ALCHEMY: string\n}\n\nexport interface EthersEventOptions {\n  contract: Contract\n  filter: EventFilter | string\n  type: TransactionType\n}\n\nexport interface EthersEvent {\n  // Raw data\n  address: string\n  topics: string[]\n  data: string\n\n  // Block data\n  blockHash: string\n  blockNumber: number\n\n  // Transaction data\n  transactionHash: string\n  transactionIndex: number\n\n  // Event data\n  event?: string\n  eventSignature?: string\n\n  // Return values\n  values: any\n}\n"],"names":[],"mappings":"AAsBA,WAoBC"}