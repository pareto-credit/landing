{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/vault-blocks/vault-block.model.ts"],"sourcesContent":["import S from 'fluent-json-schema'\n\nimport {\n  Block,\n  ClientEntity,\n  Page,\n  PageSearchQuery,\n  iBigInt,\n  sBCAddress,\n  sBigInt,\n  sBlock,\n  sClientEntity,\n  sDateString,\n  sPageSearchQuery,\n  sStringId,\n} from '../core'\nimport { sWeb3Protocol, Web3Protocol } from '../web3-client'\nimport { VAULT_BLOCKS_ROUTES_KEY } from './vault-block.const'\nimport {\n  sVaultEpochWithdrawType,\n  VaultEpochWithdrawType,\n} from '../vault-epochs'\n\n/**\n * Client VaultBlock interface\n */\nexport interface VaultBlock extends VaultBlockData, ClientEntity {}\n\nexport function sVaultBlock(isPartial?: boolean) {\n  return S.object()\n    .id('#vaultBlock')\n    .additionalProperties(false)\n    .extend(sClientEntity(isPartial))\n    .extend(sVaultBlockData(isPartial))\n}\n\nexport interface VaultBlockData extends VaultBlockBody {\n  vaultId: string\n  vaultAddress: string\n  block: Block\n}\n\nexport interface VaultBlockInterestRates {\n  // Interest rate from base strategy\n  BASE: number\n  // Interest rate from harvested rewards\n  HARVEST?: number\n  // Interest rate from distributed rewards\n  REWARDS?: number\n  // Interest rate including fees\n  GROSS?: number\n  // Net Interest rate (GROSS - fee)\n  NET?: number\n  // Fees in percentage\n  FEE?: number\n}\n\nexport interface VaultBlockAPRs extends VaultBlockInterestRates {}\nexport interface VaultBlockAPYs extends VaultBlockInterestRates {}\n\nexport function sVaultBlockInterestRates() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('BASE', S.number())\n    .required()\n    .description('Interest rate from base strategy')\n    .prop('HARVEST', S.number())\n    .description('Interest rate from harvested rewards')\n    .prop('REWARDS', S.number())\n    .description('Interest rate from distributed rewards')\n    .prop('GROSS', S.number())\n    .description('Interest rate including fees')\n    .prop('NET', S.number())\n    .description('Interest rate net of fees')\n    .prop('FEE', S.number())\n    .description('Fees in percentage')\n}\n\nexport interface RewardToken {\n  _id: string\n  address: string\n}\n\nexport interface VaultBlockRewardProgram {\n  tokenId: string\n  APR: number\n  USD?: iBigInt\n}\n\nexport function sVaultBlockRewardProgram() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('tokenId', sStringId())\n    .required()\n    .prop('APR', S.number())\n    .required()\n    .prop('USD', sBigInt())\n}\n\nexport interface VaultBlockBody {\n  APRs: VaultBlockAPRs\n  APYs: VaultBlockAPYs\n  totalSupply: iBigInt\n  price: iBigInt\n  TVL?: VaultTvl\n  cdo?: VaultContractCdoData\n  cdoEpoch?: VaultContractCdoEpochData\n  strategy?: VaultContractStrategyData\n  pools?: VaultPoolBlock[]\n  allocations?: VaultAllocation[]\n  previous?: VaultBlockBody\n  requests?: VaultBlockRequest[]\n  totalRequests?: VaultBlockTotalRequests\n  rewardPrograms?: VaultBlockRewardProgram[]\n}\n\nexport function sVaultBlockBody(isPartial?: boolean) {\n  return (\n    S.object()\n      .additionalProperties(false)\n      .prop('APRs', sVaultBlockInterestRates())\n      .description('Non-coumponded interest rates')\n      .prop('APYs', sVaultBlockInterestRates())\n      .description('Compounded interest rates')\n      .prop('totalSupply', sBigInt())\n      .prop('price', sBigInt())\n      .prop('TVL', sVaultTvl())\n      .prop('pools', S.array().items(sVaultPoolBlock()))\n      .prop('allocations', S.array().items(sVaultAllocation()))\n      .prop('cdo', sVaultContractCdoData())\n      .prop('cdoEpoch', sVaultContractCdoEpochData())\n      .prop('strategy', sVaultContractStrategyData())\n      .prop('requests', S.array().items(sVaultBlockRequest()))\n      .prop('totalRequests', sVaultBlockTotalRequests())\n      .prop('rewardPrograms', S.array().items(sVaultBlockRewardProgram()))\n      // Deprecated\n      .prop('current', S.object().additionalProperties(true))\n      .deprecated()\n      .prop('aggregated', S.object().additionalProperties(true))\n      .deprecated()\n      .required(isPartial ? [] : ['APRs', 'APYs', 'totalSupply', 'price'])\n  )\n}\n\nexport interface VaultBlockRequest {\n  type: VaultBlockRequestType\n  amount: iBigInt\n  block: Block\n  isInstant?: boolean\n  requestedOn: string\n  walletId: string\n  walletAddress: string\n  status: VaultBlockRequestStatus\n  epochNumber?: number\n}\n\nexport type VaultBlockRequestStatus =\n  | 'PENDING'\n  | 'PROCESSED'\n  | 'CLAIMABLE'\n  | 'INSTANT_CLAIMABLE'\n  | 'CLAIMED'\n\nexport function sVaultBlockRequestStatus() {\n  return S.string().enum([\n    'PENDING',\n    'PROCESSED',\n    'CLAIMABLE',\n    'INSTANT_CLAIMABLE',\n    'CLAIMED',\n  ])\n}\n\nexport type VaultBlockRequestType = 'DEPOSIT' | 'WITHDRAW' | 'REDEEM'\n\nexport function sVaultBlockRequestType() {\n  return S.string().enum(['DEPOSIT', 'WITHDRAW', 'REDEEM'])\n}\n\nexport function sVaultBlockRequest() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('block', sBlock())\n    .required()\n    .prop('type', sVaultBlockRequestType())\n    .required()\n    .prop('amount', sBigInt())\n    .required()\n    .prop('requestedOn', sDateString())\n    .required()\n    .prop('walletId', sStringId())\n    .required()\n    .prop('walletAddress', sBCAddress())\n    .required()\n    .prop('status', sVaultBlockRequestStatus())\n    .required()\n    .prop('epochNumber', S.number())\n    .prop('isInstant', S.boolean())\n}\n\nexport interface VaultBlockTotalRequests {\n  DEPOSIT?: VaultBlockDepositTotalRequest\n  WITHDRAW?: VaultBlockWithdrawTotalRequest\n  REDEEM?: VaultBlockRedeemTotalRequest\n}\n\nexport function sVaultBlockTotalRequests() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('DEPOSIT', sVaultBlockDepositTotalRequest())\n    .prop('WITHDRAW', sVaultBlockWithdrawTotalRequest())\n    .prop('REDEEM', sVaultBlockRedeemTotalRequest())\n}\n\ninterface VaultBlockDepositTotalRequest {\n  PENDING: iBigInt\n  CLAIMED: iBigInt\n}\n\nexport function sVaultBlockDepositTotalRequest() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('PENDING', sBigInt())\n    .required()\n    .prop('CLAIMED', sBigInt())\n    .required()\n}\n\ninterface VaultBlockWithdrawTotalRequest {\n  PENDING: iBigInt\n  PROCESSED: iBigInt\n  CLAIMABLE: iBigInt\n  INSTANT_CLAIMABLE: iBigInt\n  CLAIMED: iBigInt\n}\n\nexport function sVaultBlockWithdrawTotalRequest() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('PENDING', sBigInt())\n    .required()\n    .prop('PROCESSED', sBigInt())\n    .required()\n    .prop('CLAIMABLE', sBigInt())\n    .required()\n    .prop('INSTANT_CLAIMABLE', sBigInt())\n    .required()\n    .prop('CLAIMED', sBigInt())\n    .required()\n}\n\ninterface VaultBlockRedeemTotalRequest {\n  PENDING: iBigInt\n  CLAIMED: iBigInt\n}\n\nexport function sVaultBlockRedeemTotalRequest() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('PENDING', sBigInt())\n    .required()\n    .prop('CLAIMED', sBigInt())\n    .required()\n}\n\nexport interface VaultContractCdoEpochData {\n  apr: number\n  lastApr?: number\n  lastInterest: iBigInt\n  expectedInterest: iBigInt\n  deposits: iBigInt\n  duration: number\n  bufferDuration?: number\n  unclaimedFees: iBigInt\n  contractValue?: iBigInt\n\n  epochNumber?: number\n  startDate?: string\n  endDate?: string\n  startCureDate?: string\n  count?: number\n\n  status: VautlBlockEpochStatus\n  withdrawType?: VaultEpochWithdrawType\n\n  depositQueue?: VaultContractCdoEpochQueueData\n  withdrawQueue?: VaultContractCdoEpochQueueData\n\n  instantWithdraws?: VaultContractCdoEpochInstantWithdrawsData\n  withdraws?: VaultContractCdoEpochWithdrawsData\n}\n\nexport function sVaultContractCdoEpochData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('apr', S.number())\n    .required()\n    .prop('lastInterest', sBigInt())\n    .required()\n    .prop('expectedInterest', sBigInt())\n    .required()\n    .prop('unclaimedFees', sBigInt())\n    .required()\n    .prop('deposits', sBigInt())\n    .required()\n    .prop('duration', S.number())\n    .required()\n    .prop('status', sVautlBlockEpochStatus())\n    .required()\n    .prop('contractValue', sBigInt())\n    .prop('lastApr', S.number())\n    .prop('count', S.number())\n    .prop('startDate', sDateString())\n    .prop('endDate', sDateString())\n    .prop('startCureDate', sDateString())\n    .prop('epochNumber', S.number())\n    .prop('bufferDuration', S.number())\n    .prop('withdrawType', sVaultEpochWithdrawType())\n    .prop('withdraws', sVaultContractCdoEpochWithdrawsData())\n    .prop('depositQueue', sVaultContractCdoEpochQueueData())\n    .prop('withdrawQueue', sVaultContractCdoEpochQueueData())\n    .prop('instantWithdraws', sVaultContractCdoEpochInstantWithdrawsData())\n}\n\nexport interface VaultContractCdoEpochQueueData {\n  amount: iBigInt\n  lastAmount?: iBigInt\n  isInstant?: boolean\n}\n\nexport function sVaultContractCdoEpochQueueData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('amount', sBigInt())\n    .required()\n    .prop('lastAmount', sBigInt())\n    .prop('isInstant', S.boolean())\n}\n\nexport interface VaultContractCdoEpochInstantWithdrawsData {\n  disabled?: boolean\n  deadline?: string\n  allowed: boolean\n  delay: number\n  amount: iBigInt\n  aprDelta: number\n}\n\nexport function sVaultContractCdoEpochInstantWithdrawsData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('allowed', S.boolean())\n    .required()\n    .prop('delay', S.number())\n    .required()\n    .prop('amount', sBigInt())\n    .required()\n    .prop('aprDelta', S.number())\n    .required()\n    .prop('deadline', sDateString())\n    .prop('disabled', S.boolean())\n}\n\nexport interface VaultContractCdoEpochWithdrawsData {\n  amount: iBigInt\n  fees: iBigInt\n}\n\nexport function sVaultContractCdoEpochWithdrawsData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('amount', sBigInt())\n    .required()\n    .prop('fees', sBigInt())\n    .required()\n}\n\nexport interface VaultContractCdoData {\n  APRSplitRatio?: iBigInt\n  currentAARatio?: iBigInt\n}\n\nexport function sVaultContractCdoData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('APRSplitRatio', sBigInt())\n    .prop('currentAARatio', sBigInt())\n}\n\nexport interface VaultContractStrategyData {\n  APR?: iBigInt\n  rewardTokens?: string[]\n}\n\nexport function sVaultContractStrategyData() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('APR', sBigInt())\n    .prop('rewardTokens', S.array().items(S.string()))\n}\n\nexport interface VaultTvl {\n  token: iBigInt\n  USD: iBigInt\n  withRequestsToken?: iBigInt\n  withRequestsUSD?: iBigInt\n}\n\nexport function sVaultTvl() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('token', sBigInt())\n    .required()\n    .prop('USD', sBigInt())\n    .required()\n    .prop('withRequestsToken', sBigInt())\n    .description('TVL including pending deposits and withdraws')\n    .prop('withRequestsUSD', sBigInt())\n    .description('TVL + pending requests converted in USD')\n}\n\nexport interface VaultApr {\n  type: VaultAprType\n  rate: number\n}\n\nexport function sVaultApr() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('type', sVaultAprType())\n    .required()\n    .prop('rate', S.number())\n    .required()\n}\n\nexport interface VaultBlocks {\n  current: VaultBlockData\n  last?: VaultBlockData\n}\n\nexport type VaultAprType =\n  | 'BASE'\n  | 'HARVEST'\n  | 'REWARDS'\n  | 'EPOCH'\n  | 'BUFFER'\n  | 'GROSS'\n  | 'DELTA'\n  | 'NET'\n\nexport function sVaultAprType() {\n  return S.string().enum([\n    'BASE',\n    'HARVEST',\n    'REWARDS',\n    'EPOCH',\n    'BUFFER',\n    'GROSS',\n  ])\n}\n\nexport interface VaultPoolBlock {\n  address: string\n  protocol: Web3Protocol\n  rates: VaultPoolBlockRates\n  utilization: VaultPoolUtilization\n  available: VaultPoolBlockAvailable\n}\n\nexport interface VaultAllocation {\n  vaultId?: string\n  vaultAddress: string\n  percentage: number\n}\n\nexport interface VaultPoolUtilization {\n  supplied: iBigInt\n  borrowed: iBigInt\n  rate: number\n}\n\nexport interface VaultPoolBlockRates {\n  supply: number\n  borrow: number\n}\n\nexport interface VaultPoolBlockAvailable {\n  toBorrow: iBigInt\n  toWithDraw: iBigInt\n}\n\nexport enum VaultBlockErrorCodes {\n  notFound = 'VAULT_BLOCK_NOT_FOUND',\n  alreadyExists = 'VAULT_BLOCK_ALREADY_EXISTS',\n  wrontContractType = 'VAULT_BLOCK_WRONG_CONTRACT_TYPE',\n}\n\nexport enum VaultBlockRewardProgramErrorCodes {\n  tokenNotFound = 'VAULT_BLOCK_REWARD_PROGRAM_TOKEN_NOT_FOUND',\n}\n\nexport enum VaultBlockRequestErrorCodes {\n  notMatching = 'VAULT_BLOCK_REQUEST_NOT_MATCHING',\n  notClaimable = 'VAULT_BLOCK_REQUEST_NOT_CLAIMABLE',\n  epochNumber = 'VAULT_BLOCK_REQUEST_INVALID_EPOCH_NUMBER',\n  wrongStatus = 'VAULT_BLOCK_REQUEST_WRONG_STATUS',\n  wrongType = 'VAULT_BLOCK_REQUEST_WRONG_TYPE',\n}\n\nexport type VaultBlockFields =\n  | '_id'\n  | 'vaultId'\n  | 'vaultAddress'\n  | 'block'\n  | 'APRs'\n  | 'totalSupply'\n  | 'price'\n  | 'TVL'\n  | 'pools'\n  | 'allocations'\n  | 'cdo'\n  | 'cdoEpoch'\n  | 'strategy'\n  | 'requests'\n  | 'totalRequests'\n  | 'current'\n  | 'aggregated'\n  | 'createdAt'\n  | 'createdBy'\n  | 'updatedAt'\n  | 'updatedBy'\n\nexport const VAULT_BLOCK_FIELDS = [\n  '_id',\n  'vaultId',\n  'vaultAddress',\n  'block',\n  'APRs',\n  'totalSupply',\n  'price',\n  'TVL',\n  'pools',\n  'allocations',\n  'cdo',\n  'cdoEpoch',\n  'strategy',\n  'requests',\n  'totalRequests',\n  'current',\n  'aggregated',\n  'createdAt',\n  'createdBy',\n  'updatedAt',\n  'updatedBy',\n]\n\nexport const VAULT_BLOCK_SORT_FIELDS = ['block', 'timestamp']\n\nexport interface VaultBlocksSearchQuery\n  extends PageSearchQuery<'block' | 'timestamp', VaultBlockFields> {\n  block?: string | string[]\n  vaultId?: string | string[]\n  vaultAddress?: string | string[]\n  'cdoEpoch.status'?: VautlBlockEpochStatus | VautlBlockEpochStatus[]\n}\n\nexport function sVaultBlocksSearchQuery() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultId', S.array().minItems(1).maxItems(200).items(sStringId()))\n    .description('The vault IDentifier')\n    .prop(\n      'vaultAddress',\n      S.array().minItems(1).maxItems(200).items(sBCAddress())\n    )\n    .description('The vault blockchain address')\n    .prop('block', S.array().minItems(1).maxItems(200).items(S.string()))\n    .description('The block number that must match')\n    .prop(\n      'cdoEpoch.status',\n      S.array().minItems(1).maxItems(200).items(sVautlBlockEpochStatus())\n    )\n    .description('The cdoEpoch status that must match')\n    .extend(sPageSearchQuery(VAULT_BLOCK_FIELDS, VAULT_BLOCK_SORT_FIELDS))\n}\n\nexport type VautlBlockEpochStatus = 'WAITING' | 'RUNNING' | 'DEFAULTED' | 'CURE'\n\nexport function sVautlBlockEpochStatus() {\n  return S.string().enum(['WAITING', 'RUNNING', 'DEFAULTED', 'CURE'])\n}\n\nexport interface VaultBlocksClient {\n  create: (body: VaultBlockData) => Promise<VaultBlock>\n  search: (params?: VaultBlocksSearchQuery) => Promise<Page<VaultBlock>>\n  list: (params?: VaultBlocksSearchQuery) => Promise<VaultBlock[]>\n  findOne: (params?: VaultBlocksSearchQuery) => Promise<VaultBlock | undefined>\n  readOne: (params: VaultBlocksSearchQuery) => Promise<VaultBlock>\n}\n\nexport enum VaultBlockRoutes {\n  v1Create = `v1/${VAULT_BLOCKS_ROUTES_KEY}`,\n  v1Delete = `v1/${VAULT_BLOCKS_ROUTES_KEY}/:vaultBlockId`,\n  v1Read = `v1/${VAULT_BLOCKS_ROUTES_KEY}/:vaultBlockId`,\n  v1Update = `v1/${VAULT_BLOCKS_ROUTES_KEY}/:vaultBlockId`,\n  v1Search = `v1/${VAULT_BLOCKS_ROUTES_KEY}`,\n}\n\nexport function sVaultBlockData(isPartial?: boolean) {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultId', sStringId())\n    .prop('vaultAddress', sBCAddress())\n    .prop('block', sBlock())\n    .required(isPartial ? [] : ['vaultId', 'vaultAddress', 'block'])\n    .extend(sVaultBlockBody(isPartial))\n}\n\nexport function sVaultPoolBlock() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('address', sBCAddress())\n    .required()\n    .prop('protocol', sWeb3Protocol())\n    .required()\n    .prop('rates', sVaultPoolBlockRates())\n    .required()\n    .prop('utilization', sVaultPoolUtilization())\n    .required()\n    .prop('available', sVaultPoolBlockAvailable())\n    .required()\n}\n\nexport function sVaultPoolBlockRates() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('supply', S.number())\n    .required()\n    .prop('borrow', S.number())\n    .required()\n}\n\nexport function sVaultPoolUtilization() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('supplied', sBigInt())\n    .required()\n    .prop('borrowed', sBigInt())\n    .required()\n    .prop('rate', S.number())\n    .required()\n}\n\nexport function sVaultPoolBlockAvailable() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('toBorrow', sBigInt())\n    .required()\n    .prop('toWithDraw', sBigInt())\n    .required()\n}\n\nexport function sVaultAllocation() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('vaultId', sStringId())\n    .prop('vaultAddress', sBCAddress())\n    .required()\n    .prop('percentage', S.number())\n    .required()\n}\n\nexport function sVaultBlocks() {\n  return S.object()\n    .additionalProperties(false)\n    .prop('current', sVaultBlockData())\n    .required()\n    .prop('last', sVaultBlockData())\n}\n"],"names":["S","sBCAddress","sBigInt","sBlock","sClientEntity","sDateString","sPageSearchQuery","sStringId","sWeb3Protocol","VAULT_BLOCKS_ROUTES_KEY","sVaultEpochWithdrawType","sVaultBlock","isPartial","object","id","additionalProperties","extend","sVaultBlockData","sVaultBlockInterestRates","prop","number","required","description","sVaultBlockRewardProgram","sVaultBlockBody","sVaultTvl","array","items","sVaultPoolBlock","sVaultAllocation","sVaultContractCdoData","sVaultContractCdoEpochData","sVaultContractStrategyData","sVaultBlockRequest","sVaultBlockTotalRequests","deprecated","sVaultBlockRequestStatus","string","enum","sVaultBlockRequestType","boolean","sVaultBlockDepositTotalRequest","sVaultBlockWithdrawTotalRequest","sVaultBlockRedeemTotalRequest","sVautlBlockEpochStatus","sVaultContractCdoEpochWithdrawsData","sVaultContractCdoEpochQueueData","sVaultContractCdoEpochInstantWithdrawsData","sVaultApr","sVaultAprType","VaultBlockErrorCodes","VaultBlockRewardProgramErrorCodes","VaultBlockRequestErrorCodes","VAULT_BLOCK_FIELDS","VAULT_BLOCK_SORT_FIELDS","sVaultBlocksSearchQuery","minItems","maxItems","VaultBlockRoutes","sVaultPoolBlockRates","sVaultPoolUtilization","sVaultPoolBlockAvailable","sVaultBlocks"],"mappings":"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"}