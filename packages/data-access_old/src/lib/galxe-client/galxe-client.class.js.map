{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/galxe-client/galxe-client.class.ts"],"sourcesContent":["import axios, { Axios, CreateAxiosDefaults } from 'axios'\nimport { GalxeSpacePoints } from './galxe-client.model'\nimport { GALXE_GRAPHQL_ENDPOINT } from './galxe-client.const'\nimport { get } from 'lodash'\n\nexport class GalxeClient {\n  // Axios instance\n  private axios: Axios\n\n  constructor(token: string) {\n    this.axios = this.initAxios(token)\n  }\n\n  /**\n   * Axios initialization\n   */\n  private initAxios(token: string) {\n    const options: CreateAxiosDefaults = {\n      baseURL: GALXE_GRAPHQL_ENDPOINT,\n      headers: {\n        'x-api-key': token,\n        'content-type': 'application/json',\n      },\n    }\n    return axios.create(options)\n  }\n\n  /**\n   * Get campaign data by wallet address\n   * @param campaignId - the campaign ID\n   * @param walletAddress - the wallet address\n   * @returns the wallet data\n   */\n  public getCampaignDataByWallet(\n    campaignId: number,\n    walletAddress: string\n  ): Promise<GalxeSpacePoints | undefined> {\n    // Prepare query\n    const query = `\n      query SpaceLoyaltyPoints(\n        $id: Int,\n        $address: String!,\n        $sprintId: Int) {\n        space(id: $id) {\n          id\n          addressLoyaltyPoints(address: $address, sprintId: $sprintId) {\n            id\n            points\n            rank\n          }\n        }\n      }\n    `\n\n    const variables = {\n      id: campaignId,\n      address: walletAddress,\n    }\n\n    return this.axios\n      .request({\n        method: 'POST',\n        data: {\n          query,\n          variables,\n        },\n      })\n      .then((response) => get(response.data, 'data.space'))\n  }\n}\n"],"names":["axios","GALXE_GRAPHQL_ENDPOINT","get","GalxeClient","initAxios","token","options","baseURL","headers","create","getCampaignDataByWallet","campaignId","walletAddress","query","variables","id","address","request","method","data","then","response","constructor"],"mappings":"AAAA,OAAOA,WAA2C,QAAO;AAEzD,SAASC,sBAAsB,QAAQ,uBAAsB;AAC7D,SAASC,GAAG,QAAQ,SAAQ;AAE5B,OAAO,MAAMC;IAQX;;GAEC,GACD,AAAQC,UAAUC,KAAa,EAAE;QAC/B,MAAMC,UAA+B;YACnCC,SAASN;YACTO,SAAS;gBACP,aAAaH;gBACb,gBAAgB;YAClB;QACF;QACA,OAAOL,MAAMS,MAAM,CAACH;IACtB;IAEA;;;;;GAKC,GACD,AAAOI,wBACLC,UAAkB,EAClBC,aAAqB,EACkB;QACvC,gBAAgB;QAChB,MAAMC,QAAQ,CAAC;;;;;;;;;;;;;;IAcf,CAAC;QAED,MAAMC,YAAY;YAChBC,IAAIJ;YACJK,SAASJ;QACX;QAEA,OAAO,IAAI,CAACZ,KAAK,CACdiB,OAAO,CAAC;YACPC,QAAQ;YACRC,MAAM;gBACJN;gBACAC;YACF;QACF,GACCM,IAAI,CAAC,CAACC,WAAanB,IAAImB,SAASF,IAAI,EAAE;IAC3C;IA3DAG,YAAYjB,KAAa,CAAE;QACzB,IAAI,CAACL,KAAK,GAAG,IAAI,CAACI,SAAS,CAACC;IAC9B;AA0DF"}