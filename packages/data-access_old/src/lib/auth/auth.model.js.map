{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/auth/auth.model.ts"],"sourcesContent":["import { AUTH_ROUTES_KEY } from './auth.const'\n\nexport enum AuthErrorCodes {\n  invalid = 'INVALID_CREDENTIALS',\n  conflict = 'SESSION_CONFLICT',\n  authUnexpected = 'UNEXPECTED_AUTHORIZATION_HEADER',\n  authUnsupported = 'UNSUPPORTED_AUTHORIZATION_HEADER',\n  notAuthenticated = 'NOT_AUTHENTICATED',\n  notAuthorized = 'NOT_AUTHORIZED',\n  userSamePassword = 'USER_SAME_PASSWORD',\n  userWrongPassword = 'USER_WRONG_PASSWORD',\n}\n\nexport enum AuthRoutes {\n  authenticate = `${AUTH_ROUTES_KEY}/authenticate`,\n  changePassword = `${AUTH_ROUTES_KEY}/change-password`,\n  logout = `${AUTH_ROUTES_KEY}/logout`,\n  resetPassword = `${AUTH_ROUTES_KEY}/reset-password`,\n  signIn = `${AUTH_ROUTES_KEY}/sign-in`,\n}\n"],"names":["AUTH_ROUTES_KEY","AuthErrorCodes","AuthRoutes"],"mappings":"AAAA,SAASA,eAAe,QAAQ,eAAc;;UAElCC;;;;;;;;;GAAAA,mBAAAA;;UAWAC;4CACK,CAAC,EAAEF,gBAAgB,aAAa,CAAC;8CAC/B,CAAC,EAAEA,gBAAgB,gBAAgB,CAAC;sCAC5C,CAAC,EAAEA,gBAAgB,OAAO,CAAC;6CACpB,CAAC,EAAEA,gBAAgB,eAAe,CAAC;sCAC1C,CAAC,EAAEA,gBAAgB,QAAQ,CAAC;GAL3BE,eAAAA"}