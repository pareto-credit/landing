{"version":3,"sources":["../../../../../../../../libs/shared/data-access/src/lib/wallets/libs/wallets-client.lib.ts"],"sourcesContent":["import { Axios } from 'axios'\nimport {\n  WalletRoutes,\n  WalletsClient,\n  WalletsSearchQuery,\n  WalletPortfolioQuery,\n  WalletUserBody,\n} from '../wallet.model'\nimport { replaceMany, uriFy } from '../../core'\n\n/**\n * Create wallets client\n * @param axios - The Axios instance\n * @returns the wallets GOT client\n */\nexport function createWalletsClient(axios: Axios): WalletsClient {\n  return {\n    search: (searchParams?: WalletsSearchQuery) =>\n      axios\n        .request({\n          url: WalletRoutes.v1Search,\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => response.data),\n    list: (searchParams?: WalletsSearchQuery) =>\n      axios\n        .request({\n          url: WalletRoutes.v1Search,\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => {\n          const page = response.data\n          return page.data\n        }),\n    findOne: (searchParams?: WalletsSearchQuery) =>\n      axios\n        .request({\n          url: WalletRoutes.v1Search,\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => {\n          const page = response.data\n          return page.data ? page.data[0] : undefined\n        }),\n    readOne: (searchParams: WalletsSearchQuery) =>\n      axios\n        .request({\n          url: WalletRoutes.v1Search,\n          method: 'GET',\n          params: new URLSearchParams(uriFy(searchParams)),\n        })\n        .then((response) => {\n          const { data } = response.data\n\n          if (!data.length) {\n            throw Error('Not found')\n          }\n\n          return data[0]\n        }),\n    portfolio: (walletId: string, params?: WalletPortfolioQuery) =>\n      axios\n        .request({\n          url: WalletRoutes.v1Portfolio.replace(':walletId', walletId),\n          method: 'GET',\n          params: new URLSearchParams(uriFy(params)),\n        })\n        .then((response) => response.data),\n    vaults: (walletId: string, searchParams?: WalletPortfolioQuery) =>\n      axios\n        .request({\n          url: replaceMany(WalletRoutes.v1Vaults, {\n            ':walletId': walletId,\n          }),\n          method: 'GET',\n          params: searchParams\n            ? new URLSearchParams(uriFy(searchParams))\n            : undefined,\n        })\n        .then((response) => response.data),\n    ensure: (address: string) =>\n      axios\n        .request({\n          url: WalletRoutes.v1Ensure,\n          method: 'POST',\n          data: { address },\n        })\n        .then((response) => response.data),\n    user: (walletId: string, body: WalletUserBody) =>\n      axios\n        .request({\n          url: WalletRoutes.v1User.replace(':walletId', walletId),\n          method: 'POST',\n          data: body,\n        })\n        .then((response) => response.data),\n    referral: (walletId: string, referral: string) =>\n      axios\n        .request({\n          url: WalletRoutes.v1Referral.replace(':walletId', walletId),\n          method: 'POST',\n          data: { referral },\n        })\n        .then((response) => response.data),\n  }\n}\n"],"names":["WalletRoutes","replaceMany","uriFy","createWalletsClient","axios","search","searchParams","request","url","v1Search","method","params","URLSearchParams","undefined","then","response","data","list","page","findOne","readOne","length","Error","portfolio","walletId","v1Portfolio","replace","vaults","v1Vaults","ensure","address","v1Ensure","user","body","v1User","referral","v1Referral"],"mappings":"AACA,SACEA,YAAY,QAKP,kBAAiB;AACxB,SAASC,WAAW,EAAEC,KAAK,QAAQ,aAAY;AAE/C;;;;CAIC,GACD,OAAO,SAASC,oBAAoBC,KAAY;IAC9C,OAAO;QACLC,QAAQ,CAACC,eACPF,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAaS,QAAQ;gBAC1BC,QAAQ;gBACRC,QAAQL,eACJ,IAAIM,gBAAgBV,MAAMI,iBAC1BO;YACN,GACCC,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;QACrCC,MAAM,CAACX,eACLF,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAaS,QAAQ;gBAC1BC,QAAQ;gBACRC,QAAQL,eACJ,IAAIM,gBAAgBV,MAAMI,iBAC1BO;YACN,GACCC,IAAI,CAAC,CAACC;gBACL,MAAMG,OAAOH,SAASC,IAAI;gBAC1B,OAAOE,KAAKF,IAAI;YAClB;QACJG,SAAS,CAACb,eACRF,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAaS,QAAQ;gBAC1BC,QAAQ;gBACRC,QAAQL,eACJ,IAAIM,gBAAgBV,MAAMI,iBAC1BO;YACN,GACCC,IAAI,CAAC,CAACC;gBACL,MAAMG,OAAOH,SAASC,IAAI;gBAC1B,OAAOE,KAAKF,IAAI,GAAGE,KAAKF,IAAI,CAAC,EAAE,GAAGH;YACpC;QACJO,SAAS,CAACd,eACRF,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAaS,QAAQ;gBAC1BC,QAAQ;gBACRC,QAAQ,IAAIC,gBAAgBV,MAAMI;YACpC,GACCQ,IAAI,CAAC,CAACC;gBACL,MAAM,EAAEC,IAAI,EAAE,GAAGD,SAASC,IAAI;gBAE9B,IAAI,CAACA,KAAKK,MAAM,EAAE;oBAChB,MAAMC,MAAM;gBACd;gBAEA,OAAON,IAAI,CAAC,EAAE;YAChB;QACJO,WAAW,CAACC,UAAkBb,SAC5BP,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAayB,WAAW,CAACC,OAAO,CAAC,aAAaF;gBACnDd,QAAQ;gBACRC,QAAQ,IAAIC,gBAAgBV,MAAMS;YACpC,GACCG,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;QACrCW,QAAQ,CAACH,UAAkBlB,eACzBF,MACGG,OAAO,CAAC;gBACPC,KAAKP,YAAYD,aAAa4B,QAAQ,EAAE;oBACtC,aAAaJ;gBACf;gBACAd,QAAQ;gBACRC,QAAQL,eACJ,IAAIM,gBAAgBV,MAAMI,iBAC1BO;YACN,GACCC,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;QACrCa,QAAQ,CAACC,UACP1B,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAa+B,QAAQ;gBAC1BrB,QAAQ;gBACRM,MAAM;oBAAEc;gBAAQ;YAClB,GACChB,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;QACrCgB,MAAM,CAACR,UAAkBS,OACvB7B,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAakC,MAAM,CAACR,OAAO,CAAC,aAAaF;gBAC9Cd,QAAQ;gBACRM,MAAMiB;YACR,GACCnB,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;QACrCmB,UAAU,CAACX,UAAkBW,WAC3B/B,MACGG,OAAO,CAAC;gBACPC,KAAKR,aAAaoC,UAAU,CAACV,OAAO,CAAC,aAAaF;gBAClDd,QAAQ;gBACRM,MAAM;oBAAEmB;gBAAS;YACnB,GACCrB,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;IACvC;AACF"}