{"version":3,"sources":["../../../../../../../../libs/shared/data-access/src/lib/vaults/classes/vault-best-yield.class.ts"],"sourcesContent":["import { BlockNumber } from '../../core'\nimport { Token } from '../../tokens'\nimport { Web3CallData } from '../../web3-client'\nimport {\n  Vault,\n  VaultContractData,\n  VaultContractModel,\n  VaultContractOptions,\n  VaultNonPayableMethodOptions,\n  VaultNonPayableMethodType,\n  VaultPayableMethodType,\n} from '../vault.model'\nimport { VaultContract } from './vault-contract.class'\n\nexport class VaultBestYield\n  extends VaultContract\n  implements VaultContractModel\n{\n  constructor(vault: Vault, token: Token, options?: VaultContractOptions) {\n    super(vault, token, options)\n  }\n\n  /**\n   * Get contract data\n   * @returns the blockchain contract data\n   */\n  public async getContractData(\n    blockNumber: BlockNumber = 'latest'\n  ): Promise<VaultContractData> {\n    const callData = this.makeCallData(blockNumber)\n    return this.getData(callData, blockNumber)\n  }\n\n  /**\n   * Get vault payable method\n   * @param type the payment method type\n   * @param options the payment method options\n   * @returns the web3 payable method\n   */\n  public getPayableMethod(type: VaultPayableMethodType, options?: any) {\n    switch (type) {\n      case 'APPROVE':\n        return this.approveToken(options)\n      default:\n        throw new Error('Method not available for this kind of vault')\n    }\n  }\n\n  /**\n   * Get vault non payable method\n   * @param type\n   * @param params\n   */\n  public getValue(\n    type: VaultNonPayableMethodType,\n    options?: VaultNonPayableMethodOptions\n  ): Promise<any> {\n    switch (type) {\n      default:\n        throw new Error('Method not available for this kind of vault')\n    }\n  }\n\n  /**\n   * Prepare call data\n   * @returns the web3 call data\n   */\n  protected makeCallData(blockNumber?: BlockNumber): Web3CallData[] {\n    // Parse vault contract methods\n    const { abi, address, protocol, contractType } = this.vault\n    let callData = this.makeProtocolData(\n      { abi, address, protocol },\n      contractType\n    )\n\n    if (this.walletAddresses) {\n      callData = this.walletAddresses.reduce(\n        (acc, walletAddress) => [\n          ...acc,\n          ...this.makeWalletData(walletAddress, { abi, address, protocol }),\n        ],\n        callData\n      )\n    }\n\n    // Parse vault pools methods\n    if (this.vault.pools) {\n      callData = this.vault.pools.reduce(\n        (acc, pool) => [...acc, ...this.makePoolData(pool, blockNumber)],\n        callData\n      )\n    }\n\n    // Parse token methods\n    if (this.token.oracle) {\n      callData = [\n        ...callData,\n        ...this.makeProtocolData(this.token.oracle, 'ORACLE', this.token),\n      ]\n    }\n\n    return callData\n  }\n}\n"],"names":["VaultContract","VaultBestYield","getContractData","blockNumber","callData","makeCallData","getData","getPayableMethod","type","options","approveToken","Error","getValue","abi","address","protocol","contractType","vault","makeProtocolData","walletAddresses","reduce","acc","walletAddress","makeWalletData","pools","pool","makePoolData","token","oracle","constructor"],"mappings":"AAYA,SAASA,aAAa,QAAQ,yBAAwB;AAEtD,OAAO,MAAMC,uBACHD;IAOR;;;GAGC,GACD,MAAaE,gBACXC,cAA2B,QAAQ,EACP;QAC5B,MAAMC,WAAW,IAAI,CAACC,YAAY,CAACF;QACnC,OAAO,IAAI,CAACG,OAAO,CAACF,UAAUD;IAChC;IAEA;;;;;GAKC,GACD,AAAOI,iBAAiBC,IAA4B,EAAEC,OAAa,EAAE;QACnE,OAAQD;YACN,KAAK;gBACH,OAAO,IAAI,CAACE,YAAY,CAACD;YAC3B;gBACE,MAAM,IAAIE,MAAM;QACpB;IACF;IAEA;;;;GAIC,GACD,AAAOC,SACLJ,IAA+B,EAC/BC,OAAsC,EACxB;QACd,OAAQD;YACN;gBACE,MAAM,IAAIG,MAAM;QACpB;IACF;IAEA;;;GAGC,GACD,AAAUN,aAAaF,WAAyB,EAAkB;QAChE,+BAA+B;QAC/B,MAAM,EAAEU,GAAG,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,YAAY,EAAE,GAAG,IAAI,CAACC,KAAK;QAC3D,IAAIb,WAAW,IAAI,CAACc,gBAAgB,CAClC;YAAEL;YAAKC;YAASC;QAAS,GACzBC;QAGF,IAAI,IAAI,CAACG,eAAe,EAAE;YACxBf,WAAW,IAAI,CAACe,eAAe,CAACC,MAAM,CACpC,CAACC,KAAKC,gBAAkB;uBACnBD;uBACA,IAAI,CAACE,cAAc,CAACD,eAAe;wBAAET;wBAAKC;wBAASC;oBAAS;iBAChE,EACDX;QAEJ;QAEA,4BAA4B;QAC5B,IAAI,IAAI,CAACa,KAAK,CAACO,KAAK,EAAE;YACpBpB,WAAW,IAAI,CAACa,KAAK,CAACO,KAAK,CAACJ,MAAM,CAChC,CAACC,KAAKI,OAAS;uBAAIJ;uBAAQ,IAAI,CAACK,YAAY,CAACD,MAAMtB;iBAAa,EAChEC;QAEJ;QAEA,sBAAsB;QACtB,IAAI,IAAI,CAACuB,KAAK,CAACC,MAAM,EAAE;YACrBxB,WAAW;mBACNA;mBACA,IAAI,CAACc,gBAAgB,CAAC,IAAI,CAACS,KAAK,CAACC,MAAM,EAAE,UAAU,IAAI,CAACD,KAAK;aACjE;QACH;QAEA,OAAOvB;IACT;IApFAyB,YAAYZ,KAAY,EAAEU,KAAY,EAAElB,OAA8B,CAAE;QACtE,KAAK,CAACQ,OAAOU,OAAOlB;IACtB;AAmFF"}