{"version":3,"sources":["../../../../../../../../libs/shared/data-access/src/lib/campaigns/libs/campaigns-client.lib.ts"],"sourcesContent":["import { Axios } from 'axios'\nimport {\n  Campaign,\n  CampaignData,\n  CampaignsSearchQuery,\n  CampaignsClientModel,\n  CampaignRoutes,\n  CampaignPoints,\n} from '../campaign.model'\nimport { ApiEntity, uriFy } from '../../core'\n\nexport class CampaignsClient extends ApiEntity implements CampaignsClientModel {\n  constructor(axios: Axios) {\n    super(axios)\n  }\n\n  /**\n   * Create a campaign\n   * @param body - the campaign data\n   * @returns the promise for create a new campaign\n   */\n  public create(body: CampaignData) {\n    return this._create<Campaign>(CampaignRoutes.v1Create, body)\n  }\n\n  /**\n   * Search epochs by params\n   * @param searchParams - the search campaigns search params\n   * @returns the promise for search epochs\n   */\n  public search(searchParams?: CampaignsSearchQuery) {\n    return this._search<Campaign>(CampaignRoutes.v1Search, searchParams)\n  }\n\n  /**\n   * Search all epoch by params\n   * @param searchParams - the vault\n   * @returns\n   */\n  public searchAll(searchParams?: CampaignsSearchQuery) {\n    return this._searchAll<Campaign>(CampaignRoutes.v1Search, searchParams)\n  }\n\n  /**\n   * List epochs by params\n   * @param searchParams - the search campaigns search params\n   * @returns the promise for list epochs\n   */\n  public list(searchParams?: CampaignsSearchQuery) {\n    return this._list<Campaign>(CampaignRoutes.v1Search, searchParams)\n  }\n\n  /**\n   * List all epochs by params\n   * @param searchParams - the search campaigns search params\n   * @returns the promise for list epochs\n   */\n  public listAll(searchParams?: CampaignsSearchQuery) {\n    return this._listAll<Campaign>(CampaignRoutes.v1Search, searchParams)\n  }\n\n  /**\n   * Find an epoch by params\n   * @param searchParams - the search params\n   * @returns the promise for find an epoch\n   */\n  public findOne(searchParams?: CampaignsSearchQuery) {\n    return this._findOne<Campaign>(CampaignRoutes.v1Search, searchParams)\n  }\n\n  /**\n   * Get campaign points for a wallet address\n   * @param campaignId - the campaign ID\n   * @param walletAddress - the wallet address\n   * @returns the points of a campaign for a wallet\n   */\n  public points(campaignId: string, walletAddress: string) {\n    return this.axios\n      .request<CampaignPoints>({\n        url: CampaignRoutes.v1Points.replace(':campaignId', campaignId),\n        method: 'GET',\n        params: new URLSearchParams(uriFy({ walletAddress })),\n      })\n      .then((response) => response.data)\n  }\n}\n"],"names":["CampaignRoutes","ApiEntity","uriFy","CampaignsClient","create","body","_create","v1Create","search","searchParams","_search","v1Search","searchAll","_searchAll","list","_list","listAll","_listAll","findOne","_findOne","points","campaignId","walletAddress","axios","request","url","v1Points","replace","method","params","URLSearchParams","then","response","data","constructor"],"mappings":"AACA,SAKEA,cAAc,QAET,oBAAmB;AAC1B,SAASC,SAAS,EAAEC,KAAK,QAAQ,aAAY;AAE7C,OAAO,MAAMC,wBAAwBF;IAKnC;;;;GAIC,GACD,AAAOG,OAAOC,IAAkB,EAAE;QAChC,OAAO,IAAI,CAACC,OAAO,CAAWN,eAAeO,QAAQ,EAAEF;IACzD;IAEA;;;;GAIC,GACD,AAAOG,OAAOC,YAAmC,EAAE;QACjD,OAAO,IAAI,CAACC,OAAO,CAAWV,eAAeW,QAAQ,EAAEF;IACzD;IAEA;;;;GAIC,GACD,AAAOG,UAAUH,YAAmC,EAAE;QACpD,OAAO,IAAI,CAACI,UAAU,CAAWb,eAAeW,QAAQ,EAAEF;IAC5D;IAEA;;;;GAIC,GACD,AAAOK,KAAKL,YAAmC,EAAE;QAC/C,OAAO,IAAI,CAACM,KAAK,CAAWf,eAAeW,QAAQ,EAAEF;IACvD;IAEA;;;;GAIC,GACD,AAAOO,QAAQP,YAAmC,EAAE;QAClD,OAAO,IAAI,CAACQ,QAAQ,CAAWjB,eAAeW,QAAQ,EAAEF;IAC1D;IAEA;;;;GAIC,GACD,AAAOS,QAAQT,YAAmC,EAAE;QAClD,OAAO,IAAI,CAACU,QAAQ,CAAWnB,eAAeW,QAAQ,EAAEF;IAC1D;IAEA;;;;;GAKC,GACD,AAAOW,OAAOC,UAAkB,EAAEC,aAAqB,EAAE;QACvD,OAAO,IAAI,CAACC,KAAK,CACdC,OAAO,CAAiB;YACvBC,KAAKzB,eAAe0B,QAAQ,CAACC,OAAO,CAAC,eAAeN;YACpDO,QAAQ;YACRC,QAAQ,IAAIC,gBAAgB5B,MAAM;gBAAEoB;YAAc;QACpD,GACCS,IAAI,CAAC,CAACC,WAAaA,SAASC,IAAI;IACrC;IAxEAC,YAAYX,KAAY,CAAE;QACxB,KAAK,CAACA;IACR;AAuEF"}