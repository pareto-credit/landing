{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/integrations/integrations-client.lib.ts"],"sourcesContent":["import { VaultIntegrationProvider } from '../vaults'\nimport { EthenaClient } from './ethena-client/ethena-client.lib'\nimport { InstadappClient } from './instadapp-client/instadapp-client.lib'\nimport { IntegrationClientModel } from './integration-client.model'\nimport { LidoClient } from './lido-client/lido-client'\nimport { UsualClient } from './usual-client/usual-client.lib'\n\nexport class IntegrationClient implements IntegrationClientModel {\n  private client: IntegrationClientModel\n\n  public constructor(provider: VaultIntegrationProvider) {\n    switch (provider) {\n      case 'Usual':\n        this.client = new UsualClient()\n        break\n      case 'Lido':\n        this.client = new LidoClient()\n        break\n      case 'Instadapp':\n        this.client = new InstadappClient()\n        break\n      case 'Ethena':\n        this.client = new EthenaClient()\n        break\n      default:\n        throw Error(`Integration Error: wrong provider \"${provider}\"`)\n    }\n  }\n\n  public async getApr(tokenSymbol: string): Promise<number> {\n    return this.client.getApr(tokenSymbol)\n  }\n}\n"],"names":["EthenaClient","InstadappClient","LidoClient","UsualClient","IntegrationClient","getApr","tokenSymbol","client","provider","Error"],"mappings":"AACA,SAASA,YAAY,QAAQ,oCAAmC;AAChE,SAASC,eAAe,QAAQ,0CAAyC;AAEzE,SAASC,UAAU,QAAQ,4BAA2B;AACtD,SAASC,WAAW,QAAQ,kCAAiC;AAE7D,OAAO,MAAMC;IAsBX,MAAaC,OAAOC,WAAmB,EAAmB;QACxD,OAAO,IAAI,CAACC,MAAM,CAACF,MAAM,CAACC;IAC5B;IArBA,YAAmBE,QAAkC,CAAE;QACrD,OAAQA;YACN,KAAK;gBACH,IAAI,CAACD,MAAM,GAAG,IAAIJ;gBAClB;YACF,KAAK;gBACH,IAAI,CAACI,MAAM,GAAG,IAAIL;gBAClB;YACF,KAAK;gBACH,IAAI,CAACK,MAAM,GAAG,IAAIN;gBAClB;YACF,KAAK;gBACH,IAAI,CAACM,MAAM,GAAG,IAAIP;gBAClB;YACF;gBACE,MAAMS,MAAM,CAAC,mCAAmC,EAAED,SAAS,CAAC,CAAC;QACjE;IACF;AAKF"}