{"version":3,"sources":["../../../../../../../libs/shared/data-access/src/lib/wallet-blocks/wallet-block.mock.ts"],"sourcesContent":["import { DeepPartial } from '../core'\nimport { WalletBlock } from './wallet-block.model'\nimport { BlockMock } from '../core/utility.mock'\n\n/**\n * WalletBlock Mock\n */\nexport function WalletBlockMock(\n  options?: DeepPartial<WalletBlock>\n): WalletBlock {\n  const now = new Date().toISOString()\n\n  return {\n    _id: options?._id || 'WALLET_BLOCK_ID',\n\n    block: BlockMock(options?.block),\n\n    walletId: options?.walletId || 'WALLET_ID',\n    walletAddress: options?.walletAddress || 'WALLET_ADDRESS',\n\n    vaultId: options?.vaultId || 'VAULT_ID',\n    vaultAddress: options?.vaultAddress || 'VAULT_ADDRESS',\n\n    balance: options?.balance || '0',\n    tokenBalance: options?.tokenBalance || '0',\n\n    createdAt: now,\n    createdBy: options?.createdBy || 'USER_ID',\n    updatedAt: now,\n    updatedBy: options?.updatedBy || 'USER_ID',\n  }\n}\n"],"names":["BlockMock","WalletBlockMock","options","now","Date","toISOString","_id","block","walletId","walletAddress","vaultId","vaultAddress","balance","tokenBalance","createdAt","createdBy","updatedAt","updatedBy"],"mappings":"AAEA,SAASA,SAAS,QAAQ,uBAAsB;AAEhD;;CAEC,GACD,OAAO,SAASC,gBACdC,OAAkC;IAElC,MAAMC,MAAM,IAAIC,OAAOC,WAAW;IAElC,OAAO;QACLC,KAAKJ,CAAAA,2BAAAA,QAASI,GAAG,KAAI;QAErBC,OAAOP,UAAUE,2BAAAA,QAASK,KAAK;QAE/BC,UAAUN,CAAAA,2BAAAA,QAASM,QAAQ,KAAI;QAC/BC,eAAeP,CAAAA,2BAAAA,QAASO,aAAa,KAAI;QAEzCC,SAASR,CAAAA,2BAAAA,QAASQ,OAAO,KAAI;QAC7BC,cAAcT,CAAAA,2BAAAA,QAASS,YAAY,KAAI;QAEvCC,SAASV,CAAAA,2BAAAA,QAASU,OAAO,KAAI;QAC7BC,cAAcX,CAAAA,2BAAAA,QAASW,YAAY,KAAI;QAEvCC,WAAWX;QACXY,WAAWb,CAAAA,2BAAAA,QAASa,SAAS,KAAI;QACjCC,WAAWb;QACXc,WAAWf,CAAAA,2BAAAA,QAASe,SAAS,KAAI;IACnC;AACF"}